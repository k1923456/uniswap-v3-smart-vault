{
  "address": "0x621e848F39fb29843cf8b42c86Ff2558bCd6C327",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_serviceFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        },
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_usdValueTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "feeTier",
          "type": "uint24"
        }
      ],
      "name": "FeeTierActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "feeTier",
          "type": "uint24"
        }
      ],
      "name": "FeeTierDeactivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernance",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernance",
          "type": "address"
        }
      ],
      "name": "GovernanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "keeper",
          "type": "address"
        }
      ],
      "name": "KeeperAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "keeper",
          "type": "address"
        }
      ],
      "name": "KeeperRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int24",
          "name": "oldMaxTwapDeviation",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "newMaxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "MaxTwapDeviationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "defaultData",
          "type": "bytes32"
        }
      ],
      "name": "ModuleDataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOfficialAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOfficialAccount",
          "type": "address"
        }
      ],
      "name": "OfficialAccountChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPositionManagerFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPositionManagerFactory",
          "type": "address"
        }
      ],
      "name": "PositionManagerFactoryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "licenseAmount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "serviceFeeRatio",
          "type": "uint32"
        }
      ],
      "name": "ServiceFeeRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldServiceFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newServiceFeeRecipient",
          "type": "address"
        }
      ],
      "name": "ServiceFeeRecipientChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldStrategyProviderWalletFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newStrategyProviderWalletFactory",
          "type": "address"
        }
      ],
      "name": "StrategyProviderWalletFactoryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "oldTwapDuration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newTwapDuration",
          "type": "uint32"
        }
      ],
      "name": "TwapDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldUsdValueTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newUsdValueTokenAddress",
          "type": "address"
        }
      ],
      "name": "UsdValueTokenAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldWeth9",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newWeth9",
          "type": "address"
        }
      ],
      "name": "Weth9Updated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "activateFeeTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "activeModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "addKeeperToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_defaultValue",
          "type": "bytes32"
        }
      ],
      "name": "addNewContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "name": "allowableFeeTiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newContractAddress",
          "type": "address"
        }
      ],
      "name": "changeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "changeGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_serviceFeeRecipient",
          "type": "address"
        }
      ],
      "name": "changeServiceFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "deactivateFeeTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "feeTiers",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowableFeeTiers",
      "outputs": [
        {
          "internalType": "uint24[]",
          "name": "",
          "type": "uint24[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeTiers",
      "outputs": [
        {
          "internalType": "uint24[]",
          "name": "",
          "type": "uint24[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "getModuleInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "defaultData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IRegistry.Entry",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getModuleKeys",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_licenseAmount",
          "type": "uint32"
        }
      ],
      "name": "getServiceFeeRatioFromLicenseAmount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "ratio",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "feeTier",
          "type": "uint24"
        }
      ],
      "name": "isAllowableFeeTier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "licensesToServiceFeeRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTwapDeviation",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "moduleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "defaultData",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionManagerFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "removeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "removeKeeperFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceFeeDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_defaultData",
          "type": "bytes32"
        }
      ],
      "name": "setDefaultData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "setMaxTwapDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_officialAccount",
          "type": "address"
        }
      ],
      "name": "setOfficialAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_positionManagerFactory",
          "type": "address"
        }
      ],
      "name": "setPositionManagerFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_licenseAmount",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_serviceFeeRatio",
          "type": "uint32"
        }
      ],
      "name": "setServiceFeeRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategyProviderWalletFactory",
          "type": "address"
        }
      ],
      "name": "setStrategyProviderWalletFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdValueAddress",
          "type": "address"
        }
      ],
      "name": "setUsdValueTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_weth9",
          "type": "address"
        }
      ],
      "name": "setWETH9",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyProviderWalletFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdValueTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedKeepers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2bc26fa71cf802f68dd3bbbf4a26a654f4b02e263b87549695c144369fb193cf",
  "receipt": {
    "to": null,
    "from": "0x580d8b4918423E9d2964f936CbdC286eD6eF2011",
    "contractAddress": "0x621e848F39fb29843cf8b42c86Ff2558bCd6C327",
    "transactionIndex": 8,
    "gasUsed": "2563804",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc03e7a3e35e3bfd7c62b0602b283d99a5d8297d516e949e047fb72da35d30b2f",
    "transactionHash": "0x2bc26fa71cf802f68dd3bbbf4a26a654f4b02e263b87549695c144369fb193cf",
    "logs": [],
    "blockNumber": 110137824,
    "cumulativeGasUsed": "6418485",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x565d490806A6D8eF532f4d29eC00EF6aAC71A17A",
    "0x63d89F8A05691d7D1f816293443C5c74Ef79aC73",
    300,
    3,
    "0x7F5c764cBc14f9669B88837ca1490cCa17c31607",
    "0x4200000000000000000000000000000000000006"
  ],
  "numDeployments": 1,
  "solcInputHash": "dd6301e56a669096d4ac4bf415393c0f",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_serviceFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_usdValueTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"feeTier\",\"type\":\"uint24\"}],\"name\":\"FeeTierActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"feeTier\",\"type\":\"uint24\"}],\"name\":\"FeeTierDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernance\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"}],\"name\":\"KeeperAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"}],\"name\":\"KeeperRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"oldMaxTwapDeviation\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newMaxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"MaxTwapDeviationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"defaultData\",\"type\":\"bytes32\"}],\"name\":\"ModuleDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOfficialAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOfficialAccount\",\"type\":\"address\"}],\"name\":\"OfficialAccountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPositionManagerFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPositionManagerFactory\",\"type\":\"address\"}],\"name\":\"PositionManagerFactoryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"licenseAmount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"serviceFeeRatio\",\"type\":\"uint32\"}],\"name\":\"ServiceFeeRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldServiceFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newServiceFeeRecipient\",\"type\":\"address\"}],\"name\":\"ServiceFeeRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategyProviderWalletFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategyProviderWalletFactory\",\"type\":\"address\"}],\"name\":\"StrategyProviderWalletFactoryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldTwapDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newTwapDuration\",\"type\":\"uint32\"}],\"name\":\"TwapDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldUsdValueTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUsdValueTokenAddress\",\"type\":\"address\"}],\"name\":\"UsdValueTokenAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldWeth9\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWeth9\",\"type\":\"address\"}],\"name\":\"Weth9Updated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"activateFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activeModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"addKeeperToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_defaultValue\",\"type\":\"bytes32\"}],\"name\":\"addNewContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"allowableFeeTiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"}],\"name\":\"changeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"changeGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_serviceFeeRecipient\",\"type\":\"address\"}],\"name\":\"changeServiceFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"deactivateFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowableFeeTiers\",\"outputs\":[{\"internalType\":\"uint24[]\",\"name\":\"\",\"type\":\"uint24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeTiers\",\"outputs\":[{\"internalType\":\"uint24[]\",\"name\":\"\",\"type\":\"uint24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getModuleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"defaultData\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRegistry.Entry\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModuleKeys\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_licenseAmount\",\"type\":\"uint32\"}],\"name\":\"getServiceFeeRatioFromLicenseAmount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"ratio\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"feeTier\",\"type\":\"uint24\"}],\"name\":\"isAllowableFeeTier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"licensesToServiceFeeRatio\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moduleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"defaultData\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManagerFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"removeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"removeKeeperFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeeDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_defaultData\",\"type\":\"bytes32\"}],\"name\":\"setDefaultData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_officialAccount\",\"type\":\"address\"}],\"name\":\"setOfficialAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionManagerFactory\",\"type\":\"address\"}],\"name\":\"setPositionManagerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_licenseAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_serviceFeeRatio\",\"type\":\"uint32\"}],\"name\":\"setServiceFeeRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyProviderWalletFactory\",\"type\":\"address\"}],\"name\":\"setStrategyProviderWalletFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdValueAddress\",\"type\":\"address\"}],\"name\":\"setUsdValueTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"}],\"name\":\"setWETH9\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyProviderWalletFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdValueTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedKeepers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"activateFeeTier(uint24)\":{\"params\":{\"fee\":\"fee tier to be activated\"}},\"addKeeperToWhitelist(address)\":{\"params\":{\"_keeper\":\"address of the new keeper\"}},\"addNewContract(bytes32,address,bytes32)\":{\"params\":{\"_contractAddress\":\"address of the new contract\",\"_defaultValue\":\"default value of the contract\",\"_id\":\"keccak256 of contract name\"}},\"changeContract(bytes32,address)\":{\"params\":{\"_id\":\"keccak256 of contract id string\",\"_newContractAddress\":\"address of the new contract\"}},\"changeGovernance(address)\":{\"params\":{\"_governance\":\"the address of the new governance\"}},\"changeServiceFeeRecipient(address)\":{\"params\":{\"_serviceFeeRecipient\":\"the address of the new service fee recipient\"}},\"deactivateFeeTier(uint24)\":{\"params\":{\"fee\":\"fee tier to be deactivated\"}},\"getAllowableFeeTiers()\":{\"returns\":{\"_0\":\"array of allowable fee tiers\"}},\"getFeeTiers()\":{\"returns\":{\"_0\":\"array of fee tiers\"}},\"getModuleInfo(bytes32)\":{\"params\":{\"_id\":\"keccak256 of module id string\"},\"returns\":{\"_0\":\"entry of the module\"}},\"getModuleKeys()\":{\"returns\":{\"_0\":\"bytes32[] all module keys\"}},\"getServiceFeeRatioFromLicenseAmount(uint32)\":{\"params\":{\"_licenseAmount\":\"license amount to get service fee ratio\"}},\"isAllowableFeeTier(uint24)\":{\"params\":{\"feeTier\":\"the fee tier to check\"},\"returns\":{\"_0\":\"true if the fee tier is allowable, false otherwise\"}},\"removeContract(bytes32)\":{\"params\":{\"_id\":\"keccak256 of contract id string\"}},\"removeKeeperFromWhitelist(address)\":{\"params\":{\"_keeper\":\"address of the keeper to remove\"}},\"setDefaultData(bytes32,bytes32)\":{\"params\":{\"_defaultData\":\"default data for the module\",\"_id\":\"keccak256 of module id string\"}},\"setMaxTwapDeviation(int24)\":{\"params\":{\"_maxTwapDeviation\":\"the new oracle price deviation threshold\"}},\"setOfficialAccount(address)\":{\"params\":{\"_officialAccount\":\"the address of the official account\"}},\"setPositionManagerFactory(address)\":{\"params\":{\"_positionManagerFactory\":\"the address of the position manager factory\"}},\"setStrategyProviderWalletFactory(address)\":{\"params\":{\"_strategyProviderWalletFactory\":\"the address of the strategy provider collect wallet factory\"}},\"setTwapDuration(uint32)\":{\"params\":{\"_twapDuration\":\"the new twap duration\"}},\"setUsdValueTokenAddress(address)\":{\"params\":{\"_usdValueAddress\":\"the address of new usd value token\"}},\"setWETH9(address)\":{\"params\":{\"_weth9\":\"the address of new weth9\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"activeModule\":{\"params\":{\"_contractAddress\":\"address of the module\"},\"return\":\"bool true if the module is active, false otherwise\"},\"governance\":{\"return\":\"address of Governance\"},\"maxTwapDeviation\":{\"return\":\"int24 max twap deviation\"},\"officialAccount\":{\"return\":\"address of officialAccount\"},\"positionManagerFactoryAddress\":{\"return\":\"address of PositionManagerFactory\"},\"serviceFeeDenominator\":{\"return\":\"uint32 denominator of service fee ratio\"},\"serviceFeeRecipient\":{\"return\":\"address of recipient of service fee\"},\"strategyProviderWalletFactoryAddress\":{\"return\":\"address of StrategyProviderWalletFactory\"},\"twapDuration\":{\"return\":\"uint32 twap duration\"},\"usdValueTokenAddress\":{\"return\":\"address of USD value token\"},\"weth9\":{\"return\":\"address of weth9\"},\"whitelistedKeepers\":{\"params\":{\"_keeper\":\"address to check\"},\"return\":\"bool true if the address is withelisted, false otherwise\"}},\"title\":\"Stores all the governance variables\",\"version\":1},\"userdoc\":{\"events\":{\"ContractAdded(address,bytes32)\":{\"notice\":\"emitted when a contract is added to registry\"},\"ContractChanged(address,address,bytes32)\":{\"notice\":\"emitted when a contract address is updated\"},\"ContractRemoved(address,bytes32)\":{\"notice\":\"emitted when a contract address is removed\"},\"FeeTierActivated(uint24)\":{\"notice\":\"emitted when a fee tier is activated\"},\"FeeTierDeactivated(uint24)\":{\"notice\":\"emitted when a fee tier is deactivated\"},\"GovernanceChanged(address,address)\":{\"notice\":\"emitted when governance address is changed\"},\"KeeperAdded(address)\":{\"notice\":\"emitted when a keeper is added to whitelist\"},\"KeeperRemoved(address)\":{\"notice\":\"emitted when a keeper is removed from whitelist\"},\"MaxTwapDeviationUpdated(int24,int24)\":{\"notice\":\"emitted when max twap deviation is updated\"},\"ModuleDataUpdated(bytes32,address,bytes32)\":{\"notice\":\"emitted when module data is updated\"},\"OfficialAccountChanged(address,address)\":{\"notice\":\"emitted when official account address is changed\"},\"PositionManagerFactoryChanged(address,address)\":{\"notice\":\"emitted when position manager factory address is changed\"},\"ServiceFeeRatioUpdated(uint32,uint32)\":{\"notice\":\"emitted when service fee ratio is updated\"},\"ServiceFeeRecipientChanged(address,address)\":{\"notice\":\"emitted when service fee recipient address is changed\"},\"StrategyProviderWalletFactoryChanged(address,address)\":{\"notice\":\"emitted when strategy provider wallet factory address is changed\"},\"TwapDurationUpdated(uint32,uint32)\":{\"notice\":\"emitted when twap duration is updated\"},\"UsdValueTokenAddressUpdated(address,address)\":{\"notice\":\"emitted when usd value token address is updated\"},\"Weth9Updated(address,address)\":{\"notice\":\"emitted when weth9 address is updated\"}},\"kind\":\"user\",\"methods\":{\"activateFeeTier(uint24)\":{\"notice\":\"activates a fee tier\"},\"activeModule(address)\":{\"notice\":\"check if the module is active\"},\"addKeeperToWhitelist(address)\":{\"notice\":\"adds a new whitelisted keeper\"},\"addNewContract(bytes32,address,bytes32)\":{\"notice\":\"Register a contract\"},\"changeContract(bytes32,address)\":{\"notice\":\"Changes a contract's address\"},\"changeGovernance(address)\":{\"notice\":\"change the address of the governance\"},\"changeServiceFeeRecipient(address)\":{\"notice\":\"change the address of the service fee recipient\"},\"deactivateFeeTier(uint24)\":{\"notice\":\"deactivates a fee tier\"},\"getAllowableFeeTiers()\":{\"notice\":\"get the list of allowable fee tiers\"},\"getFeeTiers()\":{\"notice\":\"get the list of fee tiers\"},\"getModuleInfo(bytes32)\":{\"notice\":\"Get the address of a module for a given key\"},\"getModuleKeys()\":{\"notice\":\"Get the keys for all modules\"},\"getServiceFeeRatioFromLicenseAmount(uint32)\":{\"notice\":\"get service fee ratio for a given license amount\"},\"governance()\":{\"notice\":\"return the address of Governance\"},\"isAllowableFeeTier(uint24)\":{\"notice\":\"check if the fee tier is allowable\"},\"maxTwapDeviation()\":{\"notice\":\"return the max twap deviation\"},\"officialAccount()\":{\"notice\":\"return the address of officialAccount\"},\"positionManagerFactoryAddress()\":{\"notice\":\"return the address of PositionManagerFactory\"},\"removeContract(bytes32)\":{\"notice\":\"Removes a contract\"},\"removeKeeperFromWhitelist(address)\":{\"notice\":\"remove a whitelisted keeper\"},\"serviceFeeDenominator()\":{\"notice\":\"return the denominator of service fee ratio\"},\"serviceFeeRecipient()\":{\"notice\":\"return the address of recipient of service fee\"},\"setDefaultData(bytes32,bytes32)\":{\"notice\":\"Set default data for a module\"},\"setMaxTwapDeviation(int24)\":{\"notice\":\"set oracle price deviation threshold\"},\"setOfficialAccount(address)\":{\"notice\":\"sets the official account address\"},\"setPositionManagerFactory(address)\":{\"notice\":\"sets the Position manager factory address\"},\"setStrategyProviderWalletFactory(address)\":{\"notice\":\"sets the strategy provider collect wallet factory address\"},\"setTwapDuration(uint32)\":{\"notice\":\"set twap duration\"},\"setUsdValueTokenAddress(address)\":{\"notice\":\"set address of usd value token\"},\"setWETH9(address)\":{\"notice\":\"set address of weth9\"},\"strategyProviderWalletFactoryAddress()\":{\"notice\":\"return the address of StrategyProviderWalletFactory\"},\"twapDuration()\":{\"notice\":\"return the twap duration\"},\"usdValueTokenAddress()\":{\"notice\":\"return the address of USD value token\"},\"weth9()\":{\"notice\":\"return the address of weth9\"},\"whitelistedKeepers(address)\":{\"notice\":\"checks if the address is whitelisted as a keeper\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     *\\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0x234cdf2c3efd5f0dc17d32fe65d33c21674ca17de1e945eb60ac1076d7152d96\",\"license\":\"MIT\"},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"@openzeppelin/contracts/introspection/ERC165.sol\\\";\\n\\n/// @title Stores all the governance variables\\ncontract Registry is IRegistry, ERC165 {\\n    address public override governance;\\n    address public override positionManagerFactoryAddress;\\n    address public override strategyProviderWalletFactoryAddress;\\n    address public override officialAccount;\\n\\n    // for security of swap\\n    int24 public override maxTwapDeviation;\\n    uint32 public override twapDuration;\\n\\n    // for quote token\\n    address public override usdValueTokenAddress;\\n    address public override weth9;\\n\\n    // for keeper\\n    mapping(address => bool) public override whitelistedKeepers;\\n\\n    // for modules\\n    mapping(bytes32 => Entry) public modules;\\n    bytes32[] public moduleKeys;\\n    mapping(address => bool) public override activeModule;\\n\\n    // uniswap allowable fee tiers\\n    mapping(uint24 => bool) public allowableFeeTiers;\\n    uint24[] public feeTiers;\\n\\n    // for service fee of strategy provider\\n    uint32 public override serviceFeeDenominator = 100_000_000;\\n    address public override serviceFeeRecipient;\\n    uint32 private serviceFeeRatioLength;\\n    mapping(uint32 => uint32) public licensesToServiceFeeRatio;\\n\\n    constructor(\\n        address _governance,\\n        address _serviceFeeRecipient,\\n        int24 _maxTwapDeviation,\\n        uint32 _twapDuration,\\n        address _usdValueTokenAddress,\\n        address _weth9\\n    ) {\\n        _registerInterface(type(IRegistry).interfaceId);\\n\\n        require(_governance != address(0), \\\"RCG\\\");\\n        require(_serviceFeeRecipient != address(0), \\\"RCSFR\\\");\\n        require(_usdValueTokenAddress != address(0), \\\"RCUTA\\\");\\n        require(_weth9 != address(0), \\\"RCW\\\");\\n\\n        governance = _governance;\\n        serviceFeeRecipient = _serviceFeeRecipient;\\n        maxTwapDeviation = _maxTwapDeviation;\\n        twapDuration = _twapDuration;\\n        usdValueTokenAddress = _usdValueTokenAddress;\\n        weth9 = _weth9;\\n\\n        initAllowableFeeTiers();\\n        initServiceRatioes();\\n    }\\n\\n    function initAllowableFeeTiers() private {\\n        feeTiers.push(100);\\n        allowableFeeTiers[100] = true;\\n        feeTiers.push(500);\\n        allowableFeeTiers[500] = true;\\n        feeTiers.push(3000);\\n        allowableFeeTiers[3000] = true;\\n        feeTiers.push(10000);\\n        allowableFeeTiers[10000] = true;\\n    }\\n\\n    function initServiceRatioes() private {\\n        serviceFeeDenominator = 100_000_000;\\n        serviceFeeRatioLength = 20;\\n\\n        // 15.000000%\\n        licensesToServiceFeeRatio[1] = 15_000_000;\\n\\n        // 13.781718%\\n        licensesToServiceFeeRatio[2] = 13_781_718;\\n\\n        // 12.662384%\\n        licensesToServiceFeeRatio[3] = 12_662_384;\\n\\n        // 11.633960%\\n        licensesToServiceFeeRatio[4] = 11_633_960;\\n\\n        // 10.689064%\\n        licensesToServiceFeeRatio[5] = 10_689_064;\\n\\n        // 9.820911%\\n        licensesToServiceFeeRatio[6] = 9_820_911;\\n\\n        // 9.023269%\\n        licensesToServiceFeeRatio[7] = 9_023_269;\\n\\n        // 8.290410%\\n        licensesToServiceFeeRatio[8] = 8_290_410;\\n\\n        // 7.617073%\\n        licensesToServiceFeeRatio[9] = 7_617_073;\\n\\n        // 6.998423%\\n        licensesToServiceFeeRatio[10] = 6_998_423;\\n\\n        // 6.430020%\\n        licensesToServiceFeeRatio[11] = 6_430_020;\\n\\n        // 5.907781%\\n        licensesToServiceFeeRatio[12] = 5_907_781;\\n\\n        // 5.427958%\\n        licensesToServiceFeeRatio[13] = 5_427_958;\\n\\n        // 4.987106%\\n        licensesToServiceFeeRatio[14] = 4_987_106;\\n\\n        // 4.582060%\\n        licensesToServiceFeeRatio[15] = 4_582_060;\\n\\n        // 4.209910%\\n        licensesToServiceFeeRatio[16] = 4_209_910;\\n\\n        // 3.867986%\\n        licensesToServiceFeeRatio[17] = 3_867_986;\\n\\n        // 3.553833%\\n        licensesToServiceFeeRatio[18] = 3_553_833;\\n\\n        // 3.265195%\\n        licensesToServiceFeeRatio[19] = 3_265_195;\\n\\n        // 3.000000%\\n        licensesToServiceFeeRatio[20] = 3_000_000;\\n    }\\n\\n    ///@notice modifier to check if the sender is the governance contract\\n    modifier onlyGovernance() {\\n        require(msg.sender == governance, \\\"ROG\\\");\\n        _;\\n    }\\n\\n    ///@notice change the address of the governance\\n    ///@param _governance the address of the new governance\\n    function changeGovernance(address _governance) external onlyGovernance {\\n        require(_governance != address(0), \\\"RG0\\\");\\n        address oldGovernance = governance;\\n        governance = _governance;\\n        emit GovernanceChanged(oldGovernance, _governance);\\n    }\\n\\n    ///@notice change the address of the service fee recipient\\n    ///@param _serviceFeeRecipient the address of the new service fee recipient\\n    function changeServiceFeeRecipient(address _serviceFeeRecipient) external onlyGovernance {\\n        require(_serviceFeeRecipient != address(0), \\\"RS0\\\");\\n        address oldServiceFeeRecipient = serviceFeeRecipient;\\n        serviceFeeRecipient = _serviceFeeRecipient;\\n        emit ServiceFeeRecipientChanged(oldServiceFeeRecipient, _serviceFeeRecipient);\\n    }\\n\\n    ///@notice check if the fee tier is allowable\\n    ///@param feeTier the fee tier to check\\n    ///@return true if the fee tier is allowable, false otherwise\\n    function isAllowableFeeTier(uint24 feeTier) external view override returns (bool) {\\n        return allowableFeeTiers[feeTier];\\n    }\\n\\n    ///@notice get the list of fee tiers\\n    ///@return array of fee tiers\\n    function getFeeTiers() external view override returns (uint24[] memory) {\\n        return feeTiers;\\n    }\\n\\n    ///@notice get the list of allowable fee tiers\\n    ///@return array of allowable fee tiers\\n    function getAllowableFeeTiers() external view override returns (uint24[] memory) {\\n        uint24[] memory allowableFeeTiersList = new uint24[](feeTiers.length);\\n\\n        for (uint256 i; i < feeTiers.length; ++i) {\\n            if (!allowableFeeTiers[feeTiers[i]]) {\\n                continue;\\n            }\\n            allowableFeeTiersList[i] = feeTiers[i];\\n        }\\n\\n        return allowableFeeTiersList;\\n    }\\n\\n    ///@notice sets the Position manager factory address\\n    ///@param _positionManagerFactory the address of the position manager factory\\n    function setPositionManagerFactory(address _positionManagerFactory) external onlyGovernance {\\n        require(_positionManagerFactory != address(0), \\\"RF0\\\");\\n        address oldPositionManagerFactoryAddress = positionManagerFactoryAddress;\\n        positionManagerFactoryAddress = _positionManagerFactory;\\n        emit PositionManagerFactoryChanged(oldPositionManagerFactoryAddress, _positionManagerFactory);\\n    }\\n\\n    ///@notice sets the strategy provider collect wallet factory address\\n    ///@param _strategyProviderWalletFactory the address of the strategy provider collect wallet factory\\n    function setStrategyProviderWalletFactory(address _strategyProviderWalletFactory) external onlyGovernance {\\n        require(_strategyProviderWalletFactory != address(0), \\\"RF0\\\");\\n        address oldStrategyProviderWalletFactoryAddress = strategyProviderWalletFactoryAddress;\\n        strategyProviderWalletFactoryAddress = _strategyProviderWalletFactory;\\n        emit StrategyProviderWalletFactoryChanged(\\n            oldStrategyProviderWalletFactoryAddress,\\n            _strategyProviderWalletFactory\\n        );\\n    }\\n\\n    ///@notice sets the official account address\\n    ///@param _officialAccount the address of the official account\\n    function setOfficialAccount(address _officialAccount) external onlyGovernance {\\n        require(_officialAccount != address(0), \\\"ROA0\\\");\\n        address oldOfficialAccount = officialAccount;\\n        officialAccount = _officialAccount;\\n        emit OfficialAccountChanged(oldOfficialAccount, _officialAccount);\\n    }\\n\\n    function setServiceFeeRatio(uint32 _licenseAmount, uint32 _serviceFeeRatio) external onlyGovernance {\\n        licensesToServiceFeeRatio[_licenseAmount] = _serviceFeeRatio;\\n        if (_licenseAmount > serviceFeeRatioLength) {\\n            serviceFeeRatioLength = _licenseAmount;\\n        }\\n        emit ServiceFeeRatioUpdated(_licenseAmount, _serviceFeeRatio);\\n    }\\n\\n    ///@notice Register a contract\\n    ///@param _id keccak256 of contract name\\n    ///@param _contractAddress address of the new contract\\n    ///@param _defaultValue default value of the contract\\n    function addNewContract(bytes32 _id, address _contractAddress, bytes32 _defaultValue) external onlyGovernance {\\n        require(\\n            modules[_id].contractAddress == address(0) &&\\n                _contractAddress != address(0) &&\\n                !activeModule[_contractAddress],\\n            \\\"RAC\\\"\\n        );\\n        modules[_id] = Entry({ id: _id, contractAddress: _contractAddress, defaultData: _defaultValue });\\n        activeModule[_contractAddress] = true;\\n        moduleKeys.push(_id);\\n        emit ContractAdded(_contractAddress, _id);\\n    }\\n\\n    ///@notice Changes a contract's address\\n    ///@param _id keccak256 of contract id string\\n    ///@param _newContractAddress address of the new contract\\n    function changeContract(bytes32 _id, address _newContractAddress) external onlyGovernance {\\n        require(\\n            modules[_id].contractAddress != address(0) &&\\n                _newContractAddress != address(0) &&\\n                !activeModule[_newContractAddress] &&\\n                activeModule[modules[_id].contractAddress],\\n            \\\"RCC\\\"\\n        );\\n        address origMoudleAddress = modules[_id].contractAddress;\\n        delete activeModule[origMoudleAddress];\\n        activeModule[_newContractAddress] = true;\\n        modules[_id].contractAddress = _newContractAddress;\\n        emit ContractChanged(origMoudleAddress, _newContractAddress, _id);\\n    }\\n\\n    ///@notice Removes a contract\\n    ///@param _id keccak256 of contract id string\\n    function removeContract(bytes32 _id) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0) && activeModule[modules[_id].contractAddress], \\\"RRC\\\");\\n        address origMoudleAddress = modules[_id].contractAddress;\\n        delete activeModule[origMoudleAddress];\\n        delete modules[_id];\\n        for (uint256 i; i < moduleKeys.length; ++i) {\\n            if (moduleKeys[i] == _id) {\\n                moduleKeys[i] = moduleKeys[moduleKeys.length - 1];\\n                moduleKeys.pop();\\n                break;\\n            }\\n        }\\n        emit ContractRemoved(origMoudleAddress, _id);\\n    }\\n\\n    ///@notice adds a new whitelisted keeper\\n    ///@param _keeper address of the new keeper\\n    function addKeeperToWhitelist(address _keeper) external onlyGovernance {\\n        require(!whitelistedKeepers[_keeper], \\\"RKW\\\");\\n        whitelistedKeepers[_keeper] = true;\\n        emit KeeperAdded(_keeper);\\n    }\\n\\n    ///@notice remove a whitelisted keeper\\n    ///@param _keeper address of the keeper to remove\\n    function removeKeeperFromWhitelist(address _keeper) external onlyGovernance {\\n        require(whitelistedKeepers[_keeper], \\\"RKN\\\");\\n        whitelistedKeepers[_keeper] = false;\\n        emit KeeperRemoved(_keeper);\\n    }\\n\\n    ///@notice Get the keys for all modules\\n    ///@return bytes32[] all module keys\\n    function getModuleKeys() external view override returns (bytes32[] memory) {\\n        return moduleKeys;\\n    }\\n\\n    ///@notice Set default data for a module\\n    ///@param _id keccak256 of module id string\\n    ///@param _defaultData default data for the module\\n    function setDefaultData(bytes32 _id, bytes32 _defaultData) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), \\\"RDE\\\");\\n        require(_defaultData != bytes32(0), \\\"RD0\\\");\\n\\n        modules[_id].defaultData = _defaultData;\\n        emit ModuleDataUpdated(_id, modules[_id].contractAddress, _defaultData);\\n    }\\n\\n    ///@notice set oracle price deviation threshold\\n    ///@param _maxTwapDeviation the new oracle price deviation threshold\\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\\n        int24 oldMaxTwapDeviation = maxTwapDeviation;\\n        maxTwapDeviation = _maxTwapDeviation;\\n        emit MaxTwapDeviationUpdated(oldMaxTwapDeviation, _maxTwapDeviation);\\n    }\\n\\n    ///@notice set twap duration\\n    ///@param _twapDuration the new twap duration\\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\\n        uint32 oldTwapDuration = twapDuration;\\n        twapDuration = _twapDuration;\\n        emit TwapDurationUpdated(oldTwapDuration, _twapDuration);\\n    }\\n\\n    ///@notice set address of usd value token\\n    ///@param _usdValueAddress the address of new usd value token\\n    function setUsdValueTokenAddress(address _usdValueAddress) external onlyGovernance {\\n        require(_usdValueAddress != address(0), \\\"RUA\\\");\\n        address oldUsdValueTokenAddress = usdValueTokenAddress;\\n        usdValueTokenAddress = _usdValueAddress;\\n        emit UsdValueTokenAddressUpdated(oldUsdValueTokenAddress, _usdValueAddress);\\n    }\\n\\n    ///@notice set address of weth9\\n    ///@param _weth9 the address of new weth9\\n    function setWETH9(address _weth9) external onlyGovernance {\\n        require(_weth9 != address(0), \\\"RWA\\\");\\n        address oldWeth9 = weth9;\\n        weth9 = _weth9;\\n        emit Weth9Updated(oldWeth9, _weth9);\\n    }\\n\\n    ///@notice Get the address of a module for a given key\\n    ///@param _id keccak256 of module id string\\n    ///@return entry of the module\\n    function getModuleInfo(bytes32 _id) external view override returns (Entry memory) {\\n        return modules[_id];\\n    }\\n\\n    ///@notice activates a fee tier\\n    ///@param fee fee tier to be activated\\n    function activateFeeTier(uint24 fee) external onlyGovernance {\\n        require(!allowableFeeTiers[fee], \\\"DRAFT\\\");\\n        allowableFeeTiers[fee] = true;\\n        feeTiers.push(fee);\\n        emit FeeTierActivated(fee);\\n    }\\n\\n    ///@notice deactivates a fee tier\\n    ///@param fee fee tier to be deactivated\\n    function deactivateFeeTier(uint24 fee) external onlyGovernance {\\n        require(allowableFeeTiers[fee], \\\"DRAFT\\\");\\n        allowableFeeTiers[fee] = false;\\n        uint256 feeTiersLength = feeTiers.length;\\n        if (feeTiersLength == 1) {\\n            feeTiers.pop();\\n        } else {\\n            for (uint256 i; i < feeTiersLength; ++i) {\\n                if (feeTiers[i] == fee) {\\n                    feeTiers[i] = feeTiers[feeTiersLength - 1];\\n                    feeTiers.pop();\\n                    break;\\n                }\\n            }\\n        }\\n        emit FeeTierDeactivated(fee);\\n    }\\n\\n    ///@notice get service fee ratio for a given license amount\\n    ///@param _licenseAmount license amount to get service fee ratio\\n    function getServiceFeeRatioFromLicenseAmount(uint32 _licenseAmount) external view override returns (uint32 ratio) {\\n        require(_licenseAmount != 0, \\\"RLA0\\\");\\n        if (_licenseAmount < serviceFeeRatioLength) {\\n            return licensesToServiceFeeRatio[_licenseAmount];\\n        } else {\\n            return licensesToServiceFeeRatio[serviceFeeRatioLength];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9cf266f07651c4ecefe382ae6644a3942fcc92799599acdb6af644fc8f5ad30b\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface IRegistry {\\n    ///@notice emitted when governance address is changed\\n    ///@param oldGovernance the old governance address\\n    ///@param newGovernance the new governance address\\n    event GovernanceChanged(address oldGovernance, address newGovernance);\\n\\n    ///@notice emitted when service fee recipient address is changed\\n    ///@param oldServiceFeeRecipient the old service fee recipient address\\n    ///@param newServiceFeeRecipient the new service fee recipient address\\n    event ServiceFeeRecipientChanged(address oldServiceFeeRecipient, address newServiceFeeRecipient);\\n\\n    ///@notice emitted when position manager factory address is changed\\n    ///@param oldPositionManagerFactory the old position manager factory address\\n    ///@param newPositionManagerFactory the new position manager factory address\\n    event PositionManagerFactoryChanged(address oldPositionManagerFactory, address newPositionManagerFactory);\\n\\n    ///@notice emitted when strategy provider wallet factory address is changed\\n    ///@param oldStrategyProviderWalletFactory the old strategy provider wallet factory address\\n    ///@param newStrategyProviderWalletFactory the new strategy provider wallet factory address\\n    event StrategyProviderWalletFactoryChanged(\\n        address oldStrategyProviderWalletFactory,\\n        address newStrategyProviderWalletFactory\\n    );\\n\\n    ///@notice emitted when official account address is changed\\n    ///@param newOfficialAccount the new official account address\\n    event OfficialAccountChanged(address oldOfficialAccount, address newOfficialAccount);\\n\\n    ///@notice emitted when a contract is added to registry\\n    ///@param newContract address of the new contract\\n    ///@param contractId keccak of contract name\\n    event ContractAdded(address newContract, bytes32 contractId);\\n\\n    ///@notice emitted when a contract address is updated\\n    ///@param oldContract address of the contract before update\\n    ///@param newContract address of the contract after update\\n    ///@param contractId keccak of contract name\\n    event ContractChanged(address oldContract, address newContract, bytes32 contractId);\\n\\n    ///@notice emitted when a contract address is removed\\n    ///@param contractAddress address of the removed contract\\n    ///@param contractId keccak of removed contract name\\n    event ContractRemoved(address contractAddress, bytes32 contractId);\\n\\n    ///@notice emitted when a keeper is added to whitelist\\n    ///@param keeper address of the added keeper\\n    event KeeperAdded(address keeper);\\n\\n    ///@notice emitted when a keeper is removed from whitelist\\n    ///@param keeper address of the removed keeper\\n    event KeeperRemoved(address keeper);\\n\\n    ///@notice emitted when a fee tier is activated\\n    ///@param feeTier fee tier activated\\n    event FeeTierActivated(uint24 feeTier);\\n\\n    ///@notice emitted when a fee tier is deactivated\\n    ///@param feeTier fee tier deactivated\\n    event FeeTierDeactivated(uint24 feeTier);\\n\\n    ///@notice emitted when service fee ratio is updated\\n    ///@param licenseAmount license amount to update service fee ratio\\n    ///@param serviceFeeRatio service fee ratio to update\\n    event ServiceFeeRatioUpdated(uint32 licenseAmount, uint32 serviceFeeRatio);\\n\\n    ///@notice emitted when usd value token address is updated\\n    ///@param oldUsdValueTokenAddress the old usd value token address\\n    ///@param newUsdValueTokenAddress the new usd value token address\\n    event UsdValueTokenAddressUpdated(address oldUsdValueTokenAddress, address newUsdValueTokenAddress);\\n\\n    ///@notice emitted when weth9 address is updated\\n    ///@param oldWeth9 the old weth9 address\\n    ///@param newWeth9 the new weth9 address\\n    event Weth9Updated(address oldWeth9, address newWeth9);\\n\\n    ///@notice emitted when max twap deviation is updated\\n    ///@param oldMaxTwapDeviation the old twap deviation\\n    ///@param newMaxTwapDeviation the new twap deviation\\n    event MaxTwapDeviationUpdated(int24 oldMaxTwapDeviation, int24 newMaxTwapDeviation);\\n\\n    ///@notice emitted when twap duration is updated\\n    ///@param oldTwapDuration the old twap duration\\n    ///@param newTwapDuration the new twap duration\\n    event TwapDurationUpdated(uint32 oldTwapDuration, uint32 newTwapDuration);\\n\\n    ///@notice emitted when module data is updated\\n    ///@param id keccak256 of module id string\\n    ///@param contractAddress address of the module\\n    ///@param defaultData default data of the module\\n    event ModuleDataUpdated(bytes32 id, address contractAddress, bytes32 defaultData);\\n\\n    struct Entry {\\n        bytes32 id;\\n        address contractAddress;\\n        bytes32 defaultData;\\n    }\\n\\n    ///@notice check if the fee tier is allowable\\n    ///@param feeTier the fee tier to check\\n    ///@return true if the fee tier is allowable, false otherwise\\n    function isAllowableFeeTier(uint24 feeTier) external view returns (bool);\\n\\n    ///@notice get the list of fee tiers\\n    ///@return array of fee tiers\\n    function getFeeTiers() external view returns (uint24[] memory);\\n\\n    ///@notice get the list of allowable fee tiers\\n    ///@return array of allowable fee tiers\\n    function getAllowableFeeTiers() external view returns (uint24[] memory);\\n\\n    ///@notice return the address of PositionManagerFactory\\n    ///@return address of PositionManagerFactory\\n    function positionManagerFactoryAddress() external view returns (address);\\n\\n    ///@notice return the address of StrategyProviderWalletFactory\\n    ///@return address of StrategyProviderWalletFactory\\n    function strategyProviderWalletFactoryAddress() external view returns (address);\\n\\n    ///@notice return the address of officialAccount\\n    ///@return address of officialAccount\\n    function officialAccount() external view returns (address);\\n\\n    ///@notice return the address of weth9\\n    ///@return address of weth9\\n    function weth9() external view returns (address);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function governance() external view returns (address);\\n\\n    ///@notice return the address of recipient of service fee\\n    ///@return address of recipient of service fee\\n    function serviceFeeRecipient() external view returns (address);\\n\\n    ///@notice return the max twap deviation\\n    ///@return int24 max twap deviation\\n    function maxTwapDeviation() external view returns (int24);\\n\\n    ///@notice return the twap duration\\n    ///@return uint32 twap duration\\n    function twapDuration() external view returns (uint32);\\n\\n    ///@notice return the address of USD value token\\n    ///@return address of USD value token\\n    function usdValueTokenAddress() external view returns (address);\\n\\n    ///@notice return the denominator of service fee ratio\\n    ///@return uint32 denominator of service fee ratio\\n    function serviceFeeDenominator() external view returns (uint32);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function getModuleKeys() external view returns (bytes32[] memory);\\n\\n    ///@notice checks if the address is whitelisted as a keeper\\n    ///@param _keeper address to check\\n    ///@return bool true if the address is withelisted, false otherwise\\n    function whitelistedKeepers(address _keeper) external view returns (bool);\\n\\n    ///@notice get the module info by id\\n    ///@param _id id of the module\\n    ///@return Entry module info\\n    function getModuleInfo(bytes32 _id) external view returns (Entry memory);\\n\\n    ///@notice check if the module is active\\n    ///@param _contractAddress address of the module\\n    ///@return bool true if the module is active, false otherwise\\n    function activeModule(address _contractAddress) external view returns (bool);\\n\\n    ///@notice get service fee ratio for a given license amount\\n    ///@param _licenseAmount license amount to get service fee ratio\\n    function getServiceFeeRatioFromLicenseAmount(uint32 _licenseAmount) external view returns (uint32 ratio);\\n}\\n\",\"keccak256\":\"0xcfdebc23759b625576394a17289e6690cd5e5d6da8699da8c6d36bcbc25b46ef\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x6080604052600d805463ffffffff19166305f5e1001790553480156200002457600080fd5b506040516200282e3803806200282e83398101604081905262000047916200079c565b620000596301ffc9a760e01b620001cc565b6200006b6341a5c86d60e11b620001cc565b6001600160a01b0386166200009d5760405162461bcd60e51b8152600401620000949062000868565b60405180910390fd5b6001600160a01b038516620000c65760405162461bcd60e51b8152600401620000949062000849565b6001600160a01b038216620000ef5760405162461bcd60e51b8152600401620000949062000885565b6001600160a01b038116620001185760405162461bcd60e51b815260040162000094906200082c565b600180546001600160a01b03199081166001600160a01b0389811691909117909255600d8054600160201b600160c01b031916640100000000898516021790556004805462ffffff60a01b1916600160a01b62ffffff60028a900b16021763ffffffff60b81b1916600160b81b63ffffffff88160217905560058054821685841617905560068054909116918316919091179055620001b662000251565b620001c0620003dc565b505050505050620008a4565b6001600160e01b031980821614156200022c576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b600c8054600180820183557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7600a8084048201805462ffffff95839006600390810261010090810a88810219909316606490930292909217909255600b6020527fab559274b87fdace41b37e1130328014a05743bcd7535a1d2a9342fc3b2ff7b7805460ff1990811687179091558754808701895584810486018054918690068502840a808a02199092166101f49092029190911790557f9edcd728b5d6f52757a3b176bea462588699f89fb7a4d8163d1b5d23b3f852a480548216871790558754808701895584810486018054918690068502840a808a0219909216610bb89092029190911790557fb16fe06f8996b52251c2bf4e4945937a5fe15dd63a5f3ebeccb43c401ad6fd5b80548216871790558754808701909855838804909401805493909706909102900a9384021916612710938402179093556000919091527f1dc0047e392cb15c9ff8d8b510fcdec0d90fef45bfbcd8e9df5a6e0795e9c1a18054909216179055565b600d8054600560c21b63ffffffff60c01b1963ffffffff199283166305f5e100171617909155600e6020527fa7c5ba7114a813b50159add3a36832908dc83db71d0b9a24c2ad0f83be9582078054821662e4e1c01790557f9adb202b1492743bc00c81d33cdc6423fa8c79109027eb6a845391e8fc1f04818054821662d24ad61790557fe0283e559c29e31ee7f56467acc9dd307779c843a883aeeb3bf5c6128c9081448054821662c136701790557fa1d6913cd9e08c872be3e7525cca82e4fc0fc298a783f19022be725b19be685a8054821662b185281790557fb9bec7e2561f624fe753ff070f1599b306cbf59fafd4e8d5a8184a1ea1841bce8054821662a31a281790557f92b4482321f41ce3aa65f798bda23d0d12a60fc5f212868a548ddb00aa49de72805482166295daef1790557f376529bb8a2d41b4a589a133407fc64f3212472dbd74744348be1098bf7ba08d805482166289af251790557feab6bc3746954d8a0719de62c86ea908d362be2a58c781ada1046727253f9df280548216627e806a1790557f0d5ccdc17421fca5ca768ae29a27b8b2aa886c9e56e3482f9ba55d79d3a806648054821662743a311790557f0978afefdfd541f3bdffe34b0f19bc4ce1d7b3554d278a75e04686adf3223b3980548216626ac9971790557f7528327bfca11f705552fba9c3966003c5a3e73459dc289e7c8420997d319bee8054821662621d441790557f47a2bf86628ea95bf13ae7e8527a13a64f52541d600ba060a013f0b8e72a5e2d80548216625a25451790557f9d0231707eb2041153c28e130d22114ee38b252cf17233585036af02278e4181805482166252d2f61790557fa6897c210c76a29b3d6bf757063b10a3faa77fe0657de0ee282493e99a18ed5080548216624c18e21790557f60dd7f0393e3d3987afafbb50883ff45658a7a0c2d4460aa7a872d45c2ea2352805482166245eaac1790557f33820a7b4c4724aafa212ecdbe06d3782aeae3dbe20fcf670d9acc29d388ea908054821662403cf61790557fc0fe3ac15929d25201e62b8c796afb6745bcdd80b8be9470092f43535ba0b48d80548216623b05521790557f3757bb026b72bf4f9cbbbf8f2bafe0ea3d356ae6d8f07ef005aafb99b4cbde408054821662363a291790557f23e995b0ea7a69c30e45fb21cd9d4e2adf7852a8949479c1017e50a0a5021d51805482166231d2ab17905560146000527fad2085924f073c582f946bd77dc0abaa9c2630e9d25fd72a62a7ae1d39c641958054909116622dc6c0179055565b80516001600160a01b03811681146200079757600080fd5b919050565b60008060008060008060c08789031215620007b5578182fd5b620007c0876200077f565b9550620007d0602088016200077f565b945060408701518060020b8114620007e6578283fd5b606088015190945063ffffffff8116811462000800578283fd5b925062000810608088016200077f565b91506200082060a088016200077f565b90509295509295509295565b60208082526003908201526252435760e81b604082015260600190565b6020808252600590820152642921a9a32960d91b604082015260600190565b60208082526003908201526252434760e81b604082015260600190565b602080825260059082015264524355544160d81b604082015260600190565b611f7a80620008b46000396000f3fe608060405234801561001057600080fd5b506004361061025d5760003560e01c80637371f0a411610146578063b0b6cc1a116100c3578063de985aa211610087578063de985aa214610522578063e7c7cb9114610535578063e9a4d24f1461054a578063edbe943714610552578063ee51553b14610565578063f80ffbd5146105785761025d565b8063b0b6cc1a146104a7578063c200a811146104c9578063c433c80a146104dc578063ca91e18c146104ef578063d93194f1146105025761025d565b8063990b3ab71161010a578063990b3ab71461044857806399572d6f1461045b5780639c7f78c91461046e578063a43e04d814610481578063aee5a8df146104945761025d565b80637371f0a4146103e7578063746e813e146103fa57806375a243c41461040d5780637c3ab9681461042057806386dd37f3146104335761025d565b80632d2c5b58116101df5780634d1205eb116101a35780634d1205eb146103a157806350879c1c146103b4578063563e77ef146103bc5780635aa6e675146103c45780635c2d8040146103cc5780636b370760146103d45761025d565b80632d2c5b581461034b57806332fa35611461035357806336d4bd4b146103665780633a8141cc146103795780633cbff3fe1461038e5761025d565b8063230ed44a11610226578063230ed44a146102e857806326d89545146103085780632a3755a11461031d5780632b92b97f146103305780632d1805c5146103385761025d565b806237620a1461026257806301ffc9a71461027757806308846aa2146102a0578063211b20a3146102b5578063214fa760146102d5575b600080fd5b610275610270366004611ba4565b610580565b005b61028a610285366004611b1e565b610647565b6040516102979190611cb9565b60405180910390f35b6102a861066a565b6040516102979190611bcd565b6102c86102c3366004611a86565b610679565b6040516102979190611ee2565b6102756102e3366004611a65565b6106c3565b6102fb6102f6366004611a86565b610766565b6040516102979190611f0c565b61031061079f565b6040516102979190611f1c565b61027561032b366004611ac9565b6107b2565b6102a861092d565b610275610346366004611a65565b61093c565b6102a86109df565b610275610361366004611a9e565b6109ee565b610275610374366004611a65565b610b55565b610381610c08565b6040516102979190611c38565b61027561039c366004611b46565b610c60565b6102756103af366004611a65565b610ce7565b6102a8610da8565b610310610db7565b6102a8610dc3565b6102a8610dd2565b6103106103e2366004611b8a565b610de9565b6103106103f5366004611b8a565b610e01565b610275610408366004611a65565b610e87565b61027561041b366004611b67565b610f2a565b61027561042e366004611a65565b61102f565b61043b6110d2565b6040516102979190611c7c565b61028a610456366004611b67565b6111df565b610275610469366004611a65565b6111f4565b61028a61047c366004611b67565b611297565b61027561048f366004611a86565b6112b1565b6102756104a2366004611afd565b611459565b6104ba6104b5366004611a86565b61152d565b60405161029793929190611ccd565b61028a6104d7366004611a65565b611557565b6102756104ea366004611b8a565b61156c565b6102756104fd366004611a65565b6115f1565b610515610510366004611a86565b611694565b6040516102979190611cc4565b610275610530366004611a65565b6116b5565b61053d611767565b6040516102979190611cec565b61043b611777565b61028a610560366004611a65565b6117f8565b610275610573366004611b67565b61180d565b6102a8611a0b565b6001546001600160a01b031633146105b35760405162461bcd60e51b81526004016105aa90611da2565b60405180910390fd5b63ffffffff8281166000818152600e60205260409020805463ffffffff1916848416179055600d54600160c01b9004909116101561060a57600d805463ffffffff60c01b1916600160c01b63ffffffff8516021790555b7f6bc7da866c0d9f88d3f7e47a040502e3951e3cea9418eb312de52925f2df1cf9828260405161063b929190611f2d565b60405180910390a15050565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6005546001600160a01b031681565b610681611a1a565b5060009081526008602090815260409182902082516060810184528154815260018201546001600160a01b031692810192909252600201549181019190915290565b6001546001600160a01b031633146106ed5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166107135760405162461bcd60e51b81526004016105aa90611ddc565b600280546001600160a01b038381166001600160a01b03198316179092556040519116907f0da91a6a977357481aa9127f6253aba508c09f5cb689d112c03af2b2bc0571e99061063b9083908590611be1565b600c818154811061077657600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600454600160b81b900463ffffffff1681565b6001546001600160a01b031633146107dc5760405162461bcd60e51b81526004016105aa90611da2565b6000838152600860205260409020600101546001600160a01b031615801561080c57506001600160a01b03821615155b801561083157506001600160a01b0382166000908152600a602052604090205460ff16155b61084d5760405162461bcd60e51b81526004016105aa90611e8b565b604080516060810182528481526001600160a01b03848116602080840182815284860187815260008a815260088452878120965187559151600180880180546001600160a01b031916929097169190911790955551600290950194909455908352600a9052828220805460ff1916821790556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01849055517f1e3ff6d88ea2e368a0e9574292292d3479376c8066598cb91a0e594b7fc0826d906109209084908690611c1f565b60405180910390a1505050565b6004546001600160a01b031681565b6001546001600160a01b031633146109665760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811661098c5760405162461bcd60e51b81526004016105aa90611e51565b600580546001600160a01b038381166001600160a01b03198316179092556040519116907f02393979a09323574ea671d0b6109ef332891a1139d04481a9a574e18c177b089061063b9083908590611be1565b6002546001600160a01b031681565b6001546001600160a01b03163314610a185760405162461bcd60e51b81526004016105aa90611da2565b6000828152600860205260409020600101546001600160a01b031615801590610a4957506001600160a01b03811615155b8015610a6e57506001600160a01b0381166000908152600a602052604090205460ff16155b8015610aa157506000828152600860209081526040808320600101546001600160a01b03168352600a90915290205460ff165b610abd5760405162461bcd60e51b81526004016105aa90611d85565b6000828152600860208181526040808420600190810180546001600160a01b03908116808852600a8652848820805460ff199081169091559189168089528589208054909316909417909155958890529390925282546001600160a01b031916909117909155517fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada89061092090839085908790611bfb565b6001546001600160a01b03163314610b7f5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b038116610ba55760405162461bcd60e51b81526004016105aa90611ec5565b600d80546001600160a01b03838116640100000000908102640100000000600160c01b03198416179093556040519290910416907f9b480df677221335b5ac2cb78b8b2a6b78164556a419b39322bf17bb0f7cd9e79061063b9083908590611be1565b60606009805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191906000526020600020905b815481526020019060010190808311610c42575b5050505050905090565b6001546001600160a01b03163314610c8a5760405162461bcd60e51b81526004016105aa90611da2565b60048054600283810b62ffffff16600160a01b90810262ffffff60a01b1984161790935560405192909104900b907fb32bf5279c25f60e729f297567e5882813fe72a29dec91009962465b6a98a15f9061063b9083908590611cfa565b6001546001600160a01b03163314610d115760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811660009081526007602052604090205460ff1615610d4a5760405162461bcd60e51b81526004016105aa90611dbf565b6001600160a01b03811660009081526007602052604090819020805460ff19166001179055517f1584773458d98c71b34a270ee1100b3a42889bf91e3b7a858563b684c24d838e90610d9d908390611bcd565b60405180910390a150565b6006546001600160a01b031681565b600d5463ffffffff1681565b6001546001600160a01b031681565b600d5464010000000090046001600160a01b031681565b600e6020526000908152604090205463ffffffff1681565b600063ffffffff8216610e265760405162461bcd60e51b81526004016105aa90611d0e565b600d5463ffffffff600160c01b90910481169083161015610e5f575063ffffffff8082166000908152600e602052604090205416610665565b50600d5463ffffffff600160c01b90910481166000908152600e602052604090205416610665565b6001546001600160a01b03163314610eb15760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b038116610ed75760405162461bcd60e51b81526004016105aa90611e33565b600480546001600160a01b038381166001600160a01b03198316179092556040519116907ff545131fe9f5555beccacc88564b70711132c14b3bb17d74a6cbab3e85120aaf9061063b9083908590611be1565b6001546001600160a01b03163314610f545760405162461bcd60e51b81526004016105aa90611da2565b62ffffff81166000908152600b602052604090205460ff1615610f895760405162461bcd60e51b81526004016105aa90611d49565b62ffffff8181166000818152600b60205260408082208054600160ff199091168117909155600c805491820181559092527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7600a808404919091018054919093066003026101000a94850219169390920292909217909155517f62ebb8ab1ac0df8770975f40f5b365e92c83e198b3decf6ffdb9ed715c87eb6a90610d9d908390611f0c565b6001546001600160a01b031633146110595760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811661107f5760405162461bcd60e51b81526004016105aa90611ddc565b600380546001600160a01b038381166001600160a01b03198316179092556040519116907fb719cd32829e01b6af191647bd118b2cc080b5d99753a3b653a4c06b3d0bf2239061063b9083908590611be1565b600c5460609060009067ffffffffffffffff811180156110f157600080fd5b5060405190808252806020026020018201604052801561111b578160200160208202803683370190505b50905060005b600c548110156111d957600b6000600c838154811061113c57fe5b60009182526020808320600a8084049091015492066003026101000a90910462ffffff16835282019290925260400190205460ff1661117a576111d1565b600c818154811061118757fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff168282815181106111b857fe5b602002602001019062ffffff16908162ffffff16815250505b600101611121565b50905090565b600b6020526000908152604090205460ff1681565b6001546001600160a01b0316331461121e5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166112445760405162461bcd60e51b81526004016105aa90611e6e565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907f3aaaebeb4821d6a7e5c77ece53cff0afcc56c82add2c978dbbb7f73e84cbcfd29061063b9083908590611be1565b62ffffff166000908152600b602052604090205460ff1690565b6001546001600160a01b031633146112db5760405162461bcd60e51b81526004016105aa90611da2565b6000818152600860205260409020600101546001600160a01b03161580159061132b57506000818152600860209081526040808320600101546001600160a01b03168352600a90915290205460ff165b6113475760405162461bcd60e51b81526004016105aa90611d68565b60008181526008602081815260408084206001810180546001600160a01b0316808752600a8552928620805460ff191690558686529390925283825582546001600160a01b031916909255600201829055905b6009548110156114275782600982815481106113b257fe5b9060005260206000200154141561141f576009805460001981019081106113d557fe5b9060005260206000200154600982815481106113ed57fe5b600091825260209091200155600980548061140457fe5b60019003818190600052602060002001600090559055611427565b60010161139a565b507fc7e6ceacdd3c01833c83a12e1cd1c28559370239a10b0c10e3431746dfa2055f818360405161063b929190611c1f565b6001546001600160a01b031633146114835760405162461bcd60e51b81526004016105aa90611da2565b6000828152600860205260409020600101546001600160a01b03166114ba5760405162461bcd60e51b81526004016105aa90611e16565b806114d75760405162461bcd60e51b81526004016105aa90611d2c565b60008281526008602052604090819020600281018390556001015490517f6b4d69769d3f0361e502a8b283a303529a573bb60bc9e39f869b78a6824b695a9161063b9185916001600160a01b0316908590611ccd565b60086020526000908152604090208054600182015460029092015490916001600160a01b03169083565b600a6020526000908152604090205460ff1681565b6001546001600160a01b031633146115965760405162461bcd60e51b81526004016105aa90611da2565b6004805463ffffffff838116600160b81b90810263ffffffff60b81b198416179093556040519290910416907f1c373b0a9b89049c835cfc0851faad1f23dbb7e5bd46cf58eb88da4dd760378b9061063b9083908590611f2d565b6001546001600160a01b0316331461161b5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166116415760405162461bcd60e51b81526004016105aa90611ea8565b600680546001600160a01b038381166001600160a01b03198316179092556040519116907f1dc4784b450f0ce9e856166104598469c26f3198b5bbbbf619bd6eff74e90a159061063b9083908590611be1565b600981815481106116a457600080fd5b600091825260209091200154905081565b6001546001600160a01b031633146116df5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811660009081526007602052604090205460ff166117175760405162461bcd60e51b81526004016105aa90611df9565b6001600160a01b03811660009081526007602052604090819020805460ff19169055517fa7a775c2c8141f7985c111748ec31c11e5e44b83528e105c8d1d4e8e6b81cf8090610d9d908390611bcd565b600454600160a01b900460020b81565b6060600c805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116117b45790505050505050905090565b60076020526000908152604090205460ff1681565b6001546001600160a01b031633146118375760405162461bcd60e51b81526004016105aa90611da2565b62ffffff81166000908152600b602052604090205460ff1661186b5760405162461bcd60e51b81526004016105aa90611d49565b62ffffff81166000908152600b60205260409020805460ff19169055600c5460018114156118d257600c80548061189e57fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff021916905590556119dc565b60005b818110156119da578262ffffff16600c82815481106118f057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff1614156119d257600c600183038154811061193057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff16600c828154811061196257fe5b90600052602060002090600a91828204019190066003026101000a81548162ffffff021916908362ffffff160217905550600c80548061199e57fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff021916905590556119da565b6001016118d5565b505b7fef6304752918f1381eb6303569e67bfcbec13a5afc4a26da7e4c9d7b6b5cec6b8260405161063b9190611f0c565b6003546001600160a01b031681565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b038116811461066557600080fd5b803563ffffffff8116811461066557600080fd5b600060208284031215611a76578081fd5b611a7f82611a3a565b9392505050565b600060208284031215611a97578081fd5b5035919050565b60008060408385031215611ab0578081fd5b82359150611ac060208401611a3a565b90509250929050565b600080600060608486031215611add578081fd5b83359250611aed60208501611a3a565b9150604084013590509250925092565b60008060408385031215611b0f578182fd5b50508035926020909101359150565b600060208284031215611b2f578081fd5b81356001600160e01b031981168114611a7f578182fd5b600060208284031215611b57578081fd5b81358060020b8114611a7f578182fd5b600060208284031215611b78578081fd5b813562ffffff81168114611a7f578182fd5b600060208284031215611b9b578081fd5b611a7f82611a51565b60008060408385031215611bb6578182fd5b611bbf83611a51565b9150611ac060208401611a51565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611c7057835183529284019291840191600101611c54565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c7057835162ffffff1683529284019291840191600101611c98565b901515815260200190565b90815260200190565b9283526001600160a01b03919091166020830152604082015260600190565b60029190910b815260200190565b600292830b8152910b602082015260400190565b6020808252600490820152630524c41360e41b604082015260600190565b60208082526003908201526205244360ec1b604082015260600190565b602080825260059082015264111490519560da1b604082015260600190565b60208082526003908201526252524360e81b604082015260600190565b60208082526003908201526252434360e81b604082015260600190565b602080825260039082015262524f4760e81b604082015260600190565b602080825260039082015262524b5760e81b604082015260600190565b60208082526003908201526205246360ec1b604082015260600190565b6020808252600390820152622925a760e91b604082015260600190565b60208082526003908201526252444560e81b604082015260600190565b6020808252600490820152630524f41360e41b604082015260600190565b60208082526003908201526252554160e81b604082015260600190565b60208082526003908201526205247360ec1b604082015260600190565b60208082526003908201526252414360e81b604082015260600190565b60208082526003908201526252574160e81b604082015260600190565b60208082526003908201526205253360ec1b604082015260600190565b815181526020808301516001600160a01b0316908201526040918201519181019190915260600190565b62ffffff91909116815260200190565b63ffffffff91909116815260200190565b63ffffffff9283168152911660208201526040019056fea2646970667358221220ef9e27bf95f66601b2f236dfeb39d629a4c4e77ca31bd53acdaaf1a9ba63ad9b64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025d5760003560e01c80637371f0a411610146578063b0b6cc1a116100c3578063de985aa211610087578063de985aa214610522578063e7c7cb9114610535578063e9a4d24f1461054a578063edbe943714610552578063ee51553b14610565578063f80ffbd5146105785761025d565b8063b0b6cc1a146104a7578063c200a811146104c9578063c433c80a146104dc578063ca91e18c146104ef578063d93194f1146105025761025d565b8063990b3ab71161010a578063990b3ab71461044857806399572d6f1461045b5780639c7f78c91461046e578063a43e04d814610481578063aee5a8df146104945761025d565b80637371f0a4146103e7578063746e813e146103fa57806375a243c41461040d5780637c3ab9681461042057806386dd37f3146104335761025d565b80632d2c5b58116101df5780634d1205eb116101a35780634d1205eb146103a157806350879c1c146103b4578063563e77ef146103bc5780635aa6e675146103c45780635c2d8040146103cc5780636b370760146103d45761025d565b80632d2c5b581461034b57806332fa35611461035357806336d4bd4b146103665780633a8141cc146103795780633cbff3fe1461038e5761025d565b8063230ed44a11610226578063230ed44a146102e857806326d89545146103085780632a3755a11461031d5780632b92b97f146103305780632d1805c5146103385761025d565b806237620a1461026257806301ffc9a71461027757806308846aa2146102a0578063211b20a3146102b5578063214fa760146102d5575b600080fd5b610275610270366004611ba4565b610580565b005b61028a610285366004611b1e565b610647565b6040516102979190611cb9565b60405180910390f35b6102a861066a565b6040516102979190611bcd565b6102c86102c3366004611a86565b610679565b6040516102979190611ee2565b6102756102e3366004611a65565b6106c3565b6102fb6102f6366004611a86565b610766565b6040516102979190611f0c565b61031061079f565b6040516102979190611f1c565b61027561032b366004611ac9565b6107b2565b6102a861092d565b610275610346366004611a65565b61093c565b6102a86109df565b610275610361366004611a9e565b6109ee565b610275610374366004611a65565b610b55565b610381610c08565b6040516102979190611c38565b61027561039c366004611b46565b610c60565b6102756103af366004611a65565b610ce7565b6102a8610da8565b610310610db7565b6102a8610dc3565b6102a8610dd2565b6103106103e2366004611b8a565b610de9565b6103106103f5366004611b8a565b610e01565b610275610408366004611a65565b610e87565b61027561041b366004611b67565b610f2a565b61027561042e366004611a65565b61102f565b61043b6110d2565b6040516102979190611c7c565b61028a610456366004611b67565b6111df565b610275610469366004611a65565b6111f4565b61028a61047c366004611b67565b611297565b61027561048f366004611a86565b6112b1565b6102756104a2366004611afd565b611459565b6104ba6104b5366004611a86565b61152d565b60405161029793929190611ccd565b61028a6104d7366004611a65565b611557565b6102756104ea366004611b8a565b61156c565b6102756104fd366004611a65565b6115f1565b610515610510366004611a86565b611694565b6040516102979190611cc4565b610275610530366004611a65565b6116b5565b61053d611767565b6040516102979190611cec565b61043b611777565b61028a610560366004611a65565b6117f8565b610275610573366004611b67565b61180d565b6102a8611a0b565b6001546001600160a01b031633146105b35760405162461bcd60e51b81526004016105aa90611da2565b60405180910390fd5b63ffffffff8281166000818152600e60205260409020805463ffffffff1916848416179055600d54600160c01b9004909116101561060a57600d805463ffffffff60c01b1916600160c01b63ffffffff8516021790555b7f6bc7da866c0d9f88d3f7e47a040502e3951e3cea9418eb312de52925f2df1cf9828260405161063b929190611f2d565b60405180910390a15050565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6005546001600160a01b031681565b610681611a1a565b5060009081526008602090815260409182902082516060810184528154815260018201546001600160a01b031692810192909252600201549181019190915290565b6001546001600160a01b031633146106ed5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166107135760405162461bcd60e51b81526004016105aa90611ddc565b600280546001600160a01b038381166001600160a01b03198316179092556040519116907f0da91a6a977357481aa9127f6253aba508c09f5cb689d112c03af2b2bc0571e99061063b9083908590611be1565b600c818154811061077657600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600454600160b81b900463ffffffff1681565b6001546001600160a01b031633146107dc5760405162461bcd60e51b81526004016105aa90611da2565b6000838152600860205260409020600101546001600160a01b031615801561080c57506001600160a01b03821615155b801561083157506001600160a01b0382166000908152600a602052604090205460ff16155b61084d5760405162461bcd60e51b81526004016105aa90611e8b565b604080516060810182528481526001600160a01b03848116602080840182815284860187815260008a815260088452878120965187559151600180880180546001600160a01b031916929097169190911790955551600290950194909455908352600a9052828220805460ff1916821790556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01849055517f1e3ff6d88ea2e368a0e9574292292d3479376c8066598cb91a0e594b7fc0826d906109209084908690611c1f565b60405180910390a1505050565b6004546001600160a01b031681565b6001546001600160a01b031633146109665760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811661098c5760405162461bcd60e51b81526004016105aa90611e51565b600580546001600160a01b038381166001600160a01b03198316179092556040519116907f02393979a09323574ea671d0b6109ef332891a1139d04481a9a574e18c177b089061063b9083908590611be1565b6002546001600160a01b031681565b6001546001600160a01b03163314610a185760405162461bcd60e51b81526004016105aa90611da2565b6000828152600860205260409020600101546001600160a01b031615801590610a4957506001600160a01b03811615155b8015610a6e57506001600160a01b0381166000908152600a602052604090205460ff16155b8015610aa157506000828152600860209081526040808320600101546001600160a01b03168352600a90915290205460ff165b610abd5760405162461bcd60e51b81526004016105aa90611d85565b6000828152600860208181526040808420600190810180546001600160a01b03908116808852600a8652848820805460ff199081169091559189168089528589208054909316909417909155958890529390925282546001600160a01b031916909117909155517fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada89061092090839085908790611bfb565b6001546001600160a01b03163314610b7f5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b038116610ba55760405162461bcd60e51b81526004016105aa90611ec5565b600d80546001600160a01b03838116640100000000908102640100000000600160c01b03198416179093556040519290910416907f9b480df677221335b5ac2cb78b8b2a6b78164556a419b39322bf17bb0f7cd9e79061063b9083908590611be1565b60606009805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191906000526020600020905b815481526020019060010190808311610c42575b5050505050905090565b6001546001600160a01b03163314610c8a5760405162461bcd60e51b81526004016105aa90611da2565b60048054600283810b62ffffff16600160a01b90810262ffffff60a01b1984161790935560405192909104900b907fb32bf5279c25f60e729f297567e5882813fe72a29dec91009962465b6a98a15f9061063b9083908590611cfa565b6001546001600160a01b03163314610d115760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811660009081526007602052604090205460ff1615610d4a5760405162461bcd60e51b81526004016105aa90611dbf565b6001600160a01b03811660009081526007602052604090819020805460ff19166001179055517f1584773458d98c71b34a270ee1100b3a42889bf91e3b7a858563b684c24d838e90610d9d908390611bcd565b60405180910390a150565b6006546001600160a01b031681565b600d5463ffffffff1681565b6001546001600160a01b031681565b600d5464010000000090046001600160a01b031681565b600e6020526000908152604090205463ffffffff1681565b600063ffffffff8216610e265760405162461bcd60e51b81526004016105aa90611d0e565b600d5463ffffffff600160c01b90910481169083161015610e5f575063ffffffff8082166000908152600e602052604090205416610665565b50600d5463ffffffff600160c01b90910481166000908152600e602052604090205416610665565b6001546001600160a01b03163314610eb15760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b038116610ed75760405162461bcd60e51b81526004016105aa90611e33565b600480546001600160a01b038381166001600160a01b03198316179092556040519116907ff545131fe9f5555beccacc88564b70711132c14b3bb17d74a6cbab3e85120aaf9061063b9083908590611be1565b6001546001600160a01b03163314610f545760405162461bcd60e51b81526004016105aa90611da2565b62ffffff81166000908152600b602052604090205460ff1615610f895760405162461bcd60e51b81526004016105aa90611d49565b62ffffff8181166000818152600b60205260408082208054600160ff199091168117909155600c805491820181559092527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7600a808404919091018054919093066003026101000a94850219169390920292909217909155517f62ebb8ab1ac0df8770975f40f5b365e92c83e198b3decf6ffdb9ed715c87eb6a90610d9d908390611f0c565b6001546001600160a01b031633146110595760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811661107f5760405162461bcd60e51b81526004016105aa90611ddc565b600380546001600160a01b038381166001600160a01b03198316179092556040519116907fb719cd32829e01b6af191647bd118b2cc080b5d99753a3b653a4c06b3d0bf2239061063b9083908590611be1565b600c5460609060009067ffffffffffffffff811180156110f157600080fd5b5060405190808252806020026020018201604052801561111b578160200160208202803683370190505b50905060005b600c548110156111d957600b6000600c838154811061113c57fe5b60009182526020808320600a8084049091015492066003026101000a90910462ffffff16835282019290925260400190205460ff1661117a576111d1565b600c818154811061118757fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff168282815181106111b857fe5b602002602001019062ffffff16908162ffffff16815250505b600101611121565b50905090565b600b6020526000908152604090205460ff1681565b6001546001600160a01b0316331461121e5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166112445760405162461bcd60e51b81526004016105aa90611e6e565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907f3aaaebeb4821d6a7e5c77ece53cff0afcc56c82add2c978dbbb7f73e84cbcfd29061063b9083908590611be1565b62ffffff166000908152600b602052604090205460ff1690565b6001546001600160a01b031633146112db5760405162461bcd60e51b81526004016105aa90611da2565b6000818152600860205260409020600101546001600160a01b03161580159061132b57506000818152600860209081526040808320600101546001600160a01b03168352600a90915290205460ff165b6113475760405162461bcd60e51b81526004016105aa90611d68565b60008181526008602081815260408084206001810180546001600160a01b0316808752600a8552928620805460ff191690558686529390925283825582546001600160a01b031916909255600201829055905b6009548110156114275782600982815481106113b257fe5b9060005260206000200154141561141f576009805460001981019081106113d557fe5b9060005260206000200154600982815481106113ed57fe5b600091825260209091200155600980548061140457fe5b60019003818190600052602060002001600090559055611427565b60010161139a565b507fc7e6ceacdd3c01833c83a12e1cd1c28559370239a10b0c10e3431746dfa2055f818360405161063b929190611c1f565b6001546001600160a01b031633146114835760405162461bcd60e51b81526004016105aa90611da2565b6000828152600860205260409020600101546001600160a01b03166114ba5760405162461bcd60e51b81526004016105aa90611e16565b806114d75760405162461bcd60e51b81526004016105aa90611d2c565b60008281526008602052604090819020600281018390556001015490517f6b4d69769d3f0361e502a8b283a303529a573bb60bc9e39f869b78a6824b695a9161063b9185916001600160a01b0316908590611ccd565b60086020526000908152604090208054600182015460029092015490916001600160a01b03169083565b600a6020526000908152604090205460ff1681565b6001546001600160a01b031633146115965760405162461bcd60e51b81526004016105aa90611da2565b6004805463ffffffff838116600160b81b90810263ffffffff60b81b198416179093556040519290910416907f1c373b0a9b89049c835cfc0851faad1f23dbb7e5bd46cf58eb88da4dd760378b9061063b9083908590611f2d565b6001546001600160a01b0316331461161b5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b0381166116415760405162461bcd60e51b81526004016105aa90611ea8565b600680546001600160a01b038381166001600160a01b03198316179092556040519116907f1dc4784b450f0ce9e856166104598469c26f3198b5bbbbf619bd6eff74e90a159061063b9083908590611be1565b600981815481106116a457600080fd5b600091825260209091200154905081565b6001546001600160a01b031633146116df5760405162461bcd60e51b81526004016105aa90611da2565b6001600160a01b03811660009081526007602052604090205460ff166117175760405162461bcd60e51b81526004016105aa90611df9565b6001600160a01b03811660009081526007602052604090819020805460ff19169055517fa7a775c2c8141f7985c111748ec31c11e5e44b83528e105c8d1d4e8e6b81cf8090610d9d908390611bcd565b600454600160a01b900460020b81565b6060600c805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116117b45790505050505050905090565b60076020526000908152604090205460ff1681565b6001546001600160a01b031633146118375760405162461bcd60e51b81526004016105aa90611da2565b62ffffff81166000908152600b602052604090205460ff1661186b5760405162461bcd60e51b81526004016105aa90611d49565b62ffffff81166000908152600b60205260409020805460ff19169055600c5460018114156118d257600c80548061189e57fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff021916905590556119dc565b60005b818110156119da578262ffffff16600c82815481106118f057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff1614156119d257600c600183038154811061193057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff16600c828154811061196257fe5b90600052602060002090600a91828204019190066003026101000a81548162ffffff021916908362ffffff160217905550600c80548061199e57fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff021916905590556119da565b6001016118d5565b505b7fef6304752918f1381eb6303569e67bfcbec13a5afc4a26da7e4c9d7b6b5cec6b8260405161063b9190611f0c565b6003546001600160a01b031681565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b038116811461066557600080fd5b803563ffffffff8116811461066557600080fd5b600060208284031215611a76578081fd5b611a7f82611a3a565b9392505050565b600060208284031215611a97578081fd5b5035919050565b60008060408385031215611ab0578081fd5b82359150611ac060208401611a3a565b90509250929050565b600080600060608486031215611add578081fd5b83359250611aed60208501611a3a565b9150604084013590509250925092565b60008060408385031215611b0f578182fd5b50508035926020909101359150565b600060208284031215611b2f578081fd5b81356001600160e01b031981168114611a7f578182fd5b600060208284031215611b57578081fd5b81358060020b8114611a7f578182fd5b600060208284031215611b78578081fd5b813562ffffff81168114611a7f578182fd5b600060208284031215611b9b578081fd5b611a7f82611a51565b60008060408385031215611bb6578182fd5b611bbf83611a51565b9150611ac060208401611a51565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611c7057835183529284019291840191600101611c54565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c7057835162ffffff1683529284019291840191600101611c98565b901515815260200190565b90815260200190565b9283526001600160a01b03919091166020830152604082015260600190565b60029190910b815260200190565b600292830b8152910b602082015260400190565b6020808252600490820152630524c41360e41b604082015260600190565b60208082526003908201526205244360ec1b604082015260600190565b602080825260059082015264111490519560da1b604082015260600190565b60208082526003908201526252524360e81b604082015260600190565b60208082526003908201526252434360e81b604082015260600190565b602080825260039082015262524f4760e81b604082015260600190565b602080825260039082015262524b5760e81b604082015260600190565b60208082526003908201526205246360ec1b604082015260600190565b6020808252600390820152622925a760e91b604082015260600190565b60208082526003908201526252444560e81b604082015260600190565b6020808252600490820152630524f41360e41b604082015260600190565b60208082526003908201526252554160e81b604082015260600190565b60208082526003908201526205247360ec1b604082015260600190565b60208082526003908201526252414360e81b604082015260600190565b60208082526003908201526252574160e81b604082015260600190565b60208082526003908201526205253360ec1b604082015260600190565b815181526020808301516001600160a01b0316908201526040918201519181019190915260600190565b62ffffff91909116815260200190565b63ffffffff91909116815260200190565b63ffffffff9283168152911660208201526040019056fea2646970667358221220ef9e27bf95f66601b2f236dfeb39d629a4c4e77ca31bd53acdaaf1a9ba63ad9b64736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "activateFeeTier(uint24)": {
        "params": {
          "fee": "fee tier to be activated"
        }
      },
      "addKeeperToWhitelist(address)": {
        "params": {
          "_keeper": "address of the new keeper"
        }
      },
      "addNewContract(bytes32,address,bytes32)": {
        "params": {
          "_contractAddress": "address of the new contract",
          "_defaultValue": "default value of the contract",
          "_id": "keccak256 of contract name"
        }
      },
      "changeContract(bytes32,address)": {
        "params": {
          "_id": "keccak256 of contract id string",
          "_newContractAddress": "address of the new contract"
        }
      },
      "changeGovernance(address)": {
        "params": {
          "_governance": "the address of the new governance"
        }
      },
      "changeServiceFeeRecipient(address)": {
        "params": {
          "_serviceFeeRecipient": "the address of the new service fee recipient"
        }
      },
      "deactivateFeeTier(uint24)": {
        "params": {
          "fee": "fee tier to be deactivated"
        }
      },
      "getAllowableFeeTiers()": {
        "returns": {
          "_0": "array of allowable fee tiers"
        }
      },
      "getFeeTiers()": {
        "returns": {
          "_0": "array of fee tiers"
        }
      },
      "getModuleInfo(bytes32)": {
        "params": {
          "_id": "keccak256 of module id string"
        },
        "returns": {
          "_0": "entry of the module"
        }
      },
      "getModuleKeys()": {
        "returns": {
          "_0": "bytes32[] all module keys"
        }
      },
      "getServiceFeeRatioFromLicenseAmount(uint32)": {
        "params": {
          "_licenseAmount": "license amount to get service fee ratio"
        }
      },
      "isAllowableFeeTier(uint24)": {
        "params": {
          "feeTier": "the fee tier to check"
        },
        "returns": {
          "_0": "true if the fee tier is allowable, false otherwise"
        }
      },
      "removeContract(bytes32)": {
        "params": {
          "_id": "keccak256 of contract id string"
        }
      },
      "removeKeeperFromWhitelist(address)": {
        "params": {
          "_keeper": "address of the keeper to remove"
        }
      },
      "setDefaultData(bytes32,bytes32)": {
        "params": {
          "_defaultData": "default data for the module",
          "_id": "keccak256 of module id string"
        }
      },
      "setMaxTwapDeviation(int24)": {
        "params": {
          "_maxTwapDeviation": "the new oracle price deviation threshold"
        }
      },
      "setOfficialAccount(address)": {
        "params": {
          "_officialAccount": "the address of the official account"
        }
      },
      "setPositionManagerFactory(address)": {
        "params": {
          "_positionManagerFactory": "the address of the position manager factory"
        }
      },
      "setStrategyProviderWalletFactory(address)": {
        "params": {
          "_strategyProviderWalletFactory": "the address of the strategy provider collect wallet factory"
        }
      },
      "setTwapDuration(uint32)": {
        "params": {
          "_twapDuration": "the new twap duration"
        }
      },
      "setUsdValueTokenAddress(address)": {
        "params": {
          "_usdValueAddress": "the address of new usd value token"
        }
      },
      "setWETH9(address)": {
        "params": {
          "_weth9": "the address of new weth9"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "stateVariables": {
      "activeModule": {
        "params": {
          "_contractAddress": "address of the module"
        },
        "return": "bool true if the module is active, false otherwise"
      },
      "governance": {
        "return": "address of Governance"
      },
      "maxTwapDeviation": {
        "return": "int24 max twap deviation"
      },
      "officialAccount": {
        "return": "address of officialAccount"
      },
      "positionManagerFactoryAddress": {
        "return": "address of PositionManagerFactory"
      },
      "serviceFeeDenominator": {
        "return": "uint32 denominator of service fee ratio"
      },
      "serviceFeeRecipient": {
        "return": "address of recipient of service fee"
      },
      "strategyProviderWalletFactoryAddress": {
        "return": "address of StrategyProviderWalletFactory"
      },
      "twapDuration": {
        "return": "uint32 twap duration"
      },
      "usdValueTokenAddress": {
        "return": "address of USD value token"
      },
      "weth9": {
        "return": "address of weth9"
      },
      "whitelistedKeepers": {
        "params": {
          "_keeper": "address to check"
        },
        "return": "bool true if the address is withelisted, false otherwise"
      }
    },
    "title": "Stores all the governance variables",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractAdded(address,bytes32)": {
        "notice": "emitted when a contract is added to registry"
      },
      "ContractChanged(address,address,bytes32)": {
        "notice": "emitted when a contract address is updated"
      },
      "ContractRemoved(address,bytes32)": {
        "notice": "emitted when a contract address is removed"
      },
      "FeeTierActivated(uint24)": {
        "notice": "emitted when a fee tier is activated"
      },
      "FeeTierDeactivated(uint24)": {
        "notice": "emitted when a fee tier is deactivated"
      },
      "GovernanceChanged(address,address)": {
        "notice": "emitted when governance address is changed"
      },
      "KeeperAdded(address)": {
        "notice": "emitted when a keeper is added to whitelist"
      },
      "KeeperRemoved(address)": {
        "notice": "emitted when a keeper is removed from whitelist"
      },
      "MaxTwapDeviationUpdated(int24,int24)": {
        "notice": "emitted when max twap deviation is updated"
      },
      "ModuleDataUpdated(bytes32,address,bytes32)": {
        "notice": "emitted when module data is updated"
      },
      "OfficialAccountChanged(address,address)": {
        "notice": "emitted when official account address is changed"
      },
      "PositionManagerFactoryChanged(address,address)": {
        "notice": "emitted when position manager factory address is changed"
      },
      "ServiceFeeRatioUpdated(uint32,uint32)": {
        "notice": "emitted when service fee ratio is updated"
      },
      "ServiceFeeRecipientChanged(address,address)": {
        "notice": "emitted when service fee recipient address is changed"
      },
      "StrategyProviderWalletFactoryChanged(address,address)": {
        "notice": "emitted when strategy provider wallet factory address is changed"
      },
      "TwapDurationUpdated(uint32,uint32)": {
        "notice": "emitted when twap duration is updated"
      },
      "UsdValueTokenAddressUpdated(address,address)": {
        "notice": "emitted when usd value token address is updated"
      },
      "Weth9Updated(address,address)": {
        "notice": "emitted when weth9 address is updated"
      }
    },
    "kind": "user",
    "methods": {
      "activateFeeTier(uint24)": {
        "notice": "activates a fee tier"
      },
      "activeModule(address)": {
        "notice": "check if the module is active"
      },
      "addKeeperToWhitelist(address)": {
        "notice": "adds a new whitelisted keeper"
      },
      "addNewContract(bytes32,address,bytes32)": {
        "notice": "Register a contract"
      },
      "changeContract(bytes32,address)": {
        "notice": "Changes a contract's address"
      },
      "changeGovernance(address)": {
        "notice": "change the address of the governance"
      },
      "changeServiceFeeRecipient(address)": {
        "notice": "change the address of the service fee recipient"
      },
      "deactivateFeeTier(uint24)": {
        "notice": "deactivates a fee tier"
      },
      "getAllowableFeeTiers()": {
        "notice": "get the list of allowable fee tiers"
      },
      "getFeeTiers()": {
        "notice": "get the list of fee tiers"
      },
      "getModuleInfo(bytes32)": {
        "notice": "Get the address of a module for a given key"
      },
      "getModuleKeys()": {
        "notice": "Get the keys for all modules"
      },
      "getServiceFeeRatioFromLicenseAmount(uint32)": {
        "notice": "get service fee ratio for a given license amount"
      },
      "governance()": {
        "notice": "return the address of Governance"
      },
      "isAllowableFeeTier(uint24)": {
        "notice": "check if the fee tier is allowable"
      },
      "maxTwapDeviation()": {
        "notice": "return the max twap deviation"
      },
      "officialAccount()": {
        "notice": "return the address of officialAccount"
      },
      "positionManagerFactoryAddress()": {
        "notice": "return the address of PositionManagerFactory"
      },
      "removeContract(bytes32)": {
        "notice": "Removes a contract"
      },
      "removeKeeperFromWhitelist(address)": {
        "notice": "remove a whitelisted keeper"
      },
      "serviceFeeDenominator()": {
        "notice": "return the denominator of service fee ratio"
      },
      "serviceFeeRecipient()": {
        "notice": "return the address of recipient of service fee"
      },
      "setDefaultData(bytes32,bytes32)": {
        "notice": "Set default data for a module"
      },
      "setMaxTwapDeviation(int24)": {
        "notice": "set oracle price deviation threshold"
      },
      "setOfficialAccount(address)": {
        "notice": "sets the official account address"
      },
      "setPositionManagerFactory(address)": {
        "notice": "sets the Position manager factory address"
      },
      "setStrategyProviderWalletFactory(address)": {
        "notice": "sets the strategy provider collect wallet factory address"
      },
      "setTwapDuration(uint32)": {
        "notice": "set twap duration"
      },
      "setUsdValueTokenAddress(address)": {
        "notice": "set address of usd value token"
      },
      "setWETH9(address)": {
        "notice": "set address of weth9"
      },
      "strategyProviderWalletFactoryAddress()": {
        "notice": "return the address of StrategyProviderWalletFactory"
      },
      "twapDuration()": {
        "notice": "return the twap duration"
      },
      "usdValueTokenAddress()": {
        "notice": "return the address of USD value token"
      },
      "weth9()": {
        "notice": "return the address of weth9"
      },
      "whitelistedKeepers(address)": {
        "notice": "checks if the address is whitelisted as a keeper"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/Registry.sol:Registry",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 6458,
        "contract": "contracts/Registry.sol:Registry",
        "label": "governance",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6461,
        "contract": "contracts/Registry.sol:Registry",
        "label": "positionManagerFactoryAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6464,
        "contract": "contracts/Registry.sol:Registry",
        "label": "strategyProviderWalletFactoryAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6467,
        "contract": "contracts/Registry.sol:Registry",
        "label": "officialAccount",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 6470,
        "contract": "contracts/Registry.sol:Registry",
        "label": "maxTwapDeviation",
        "offset": 20,
        "slot": "4",
        "type": "t_int24"
      },
      {
        "astId": 6473,
        "contract": "contracts/Registry.sol:Registry",
        "label": "twapDuration",
        "offset": 23,
        "slot": "4",
        "type": "t_uint32"
      },
      {
        "astId": 6476,
        "contract": "contracts/Registry.sol:Registry",
        "label": "usdValueTokenAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 6479,
        "contract": "contracts/Registry.sol:Registry",
        "label": "weth9",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 6484,
        "contract": "contracts/Registry.sol:Registry",
        "label": "whitelistedKeepers",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6488,
        "contract": "contracts/Registry.sol:Registry",
        "label": "modules",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_struct(Entry)14148_storage)"
      },
      {
        "astId": 6491,
        "contract": "contracts/Registry.sol:Registry",
        "label": "moduleKeys",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 6496,
        "contract": "contracts/Registry.sol:Registry",
        "label": "activeModule",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6500,
        "contract": "contracts/Registry.sol:Registry",
        "label": "allowableFeeTiers",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint24,t_bool)"
      },
      {
        "astId": 6503,
        "contract": "contracts/Registry.sol:Registry",
        "label": "feeTiers",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_uint24)dyn_storage"
      },
      {
        "astId": 6507,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeDenominator",
        "offset": 0,
        "slot": "13",
        "type": "t_uint32"
      },
      {
        "astId": 6510,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeRecipient",
        "offset": 4,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 6512,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeRatioLength",
        "offset": 24,
        "slot": "13",
        "type": "t_uint32"
      },
      {
        "astId": 6516,
        "contract": "contracts/Registry.sol:Registry",
        "label": "licensesToServiceFeeRatio",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint32,t_uint32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint24)dyn_storage": {
        "base": "t_uint24",
        "encoding": "dynamic_array",
        "label": "uint24[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_int24": {
        "encoding": "inplace",
        "label": "int24",
        "numberOfBytes": "3"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(Entry)14148_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IRegistry.Entry)",
        "numberOfBytes": "32",
        "value": "t_struct(Entry)14148_storage"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint24,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint24",
        "label": "mapping(uint24 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint32,t_uint32)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_struct(Entry)14148_storage": {
        "encoding": "inplace",
        "label": "struct IRegistry.Entry",
        "members": [
          {
            "astId": 14143,
            "contract": "contracts/Registry.sol:Registry",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 14145,
            "contract": "contracts/Registry.sol:Registry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 14147,
            "contract": "contracts/Registry.sol:Registry",
            "label": "defaultData",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}