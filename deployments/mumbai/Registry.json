{
  "address": "0x2833242BAC2E2a196d240ADe39ff6D2b912D9edb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_serviceFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        },
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_usdValueTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "ContractRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernance",
          "type": "address"
        }
      ],
      "name": "GovernanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newServiceFeeRecipient",
          "type": "address"
        }
      ],
      "name": "ServiceFeeRecipientChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "activateFeeTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "addKeeperToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_defaultValue",
          "type": "bytes32"
        }
      ],
      "name": "addNewContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "name": "allowableFeeTiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newContractAddress",
          "type": "address"
        }
      ],
      "name": "changeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "changeGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_serviceFeeRecipient",
          "type": "address"
        }
      ],
      "name": "changeServiceFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "deactivateFeeTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "feeTiers",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowableFeeTiers",
      "outputs": [
        {
          "internalType": "uint24[]",
          "name": "",
          "type": "uint24[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeTiers",
      "outputs": [
        {
          "internalType": "uint24[]",
          "name": "",
          "type": "uint24[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "getModuleInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "defaultData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IRegistry.Entry",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getModuleKeys",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_licenseAmount",
          "type": "uint32"
        }
      ],
      "name": "getServiceFeeRatioFromLicenseAmount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "ratio",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "feeTier",
          "type": "uint24"
        }
      ],
      "name": "isAllowableFeeTier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "licnesesToServiceFeeRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTwapDeviation",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "moduleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "defaultData",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionManagerFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "removeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "removeKeeperFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceFeeDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_defaultData",
          "type": "bytes32"
        }
      ],
      "name": "setDefaultData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "setMaxTwapDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_positionManagerFactory",
          "type": "address"
        }
      ],
      "name": "setPositionManagerFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_licenseAmount",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_serviceFeeRatio",
          "type": "uint32"
        }
      ],
      "name": "setServiceFeeRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategyProviderWalletFactory",
          "type": "address"
        }
      ],
      "name": "setStrategyProviderWalletFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdValueAddress",
          "type": "address"
        }
      ],
      "name": "setUsdValueTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_weth9",
          "type": "address"
        }
      ],
      "name": "setWETH9",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyProviderWalletFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdValueTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedKeepers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e0a15724af55ef1cb0b89f74f4f60b1a1d8e57a8b8f99ec24d77e78528a00a6",
  "receipt": {
    "to": null,
    "from": "0x565d490806A6D8eF532f4d29eC00EF6aAC71A17A",
    "contractAddress": "0x2833242BAC2E2a196d240ADe39ff6D2b912D9edb",
    "transactionIndex": 26,
    "gasUsed": "2185138",
    "logsBloom": "0x
    "blockHash": "0x7f8cf0cf160c2edf0f6bcc0a0bdccff0c2d53698c9d677a543b52fab64405a05",
    "transactionHash": "0x0e0a15724af55ef1cb0b89f74f4f60b1a1d8e57a8b8f99ec24d77e78528a00a6",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 39534139,
        "transactionHash": "0x0e0a15724af55ef1cb0b89f74f4f60b1a1d8e57a8b8f99ec24d77e78528a00a6",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000565d490806a6d8ef532f4d29ec00ef6aac71a17a",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000bcccdf68dcd7c00000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000007e3c0d5a39494a890e00000000000000000000000000000000000000000000000006e48e8bdd24328400000000000000000000000000000000000000000000007e3c1927073fd8568a",
        "logIndex": 157,
        "blockHash": "0x7f8cf0cf160c2edf0f6bcc0a0bdccff0c2d53698c9d677a543b52fab64405a05"
      }
    ],
    "blockNumber": 39534139,
    "cumulativeGasUsed": "6516185",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x565d490806A6D8eF532f4d29eC00EF6aAC71A17A",
    "0x565d490806A6D8eF532f4d29eC00EF6aAC71A17A",
    300,
    3,
    "0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747",
    "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889"
  ],
  "numDeployments": 2,
  "solcInputHash": "939ba6376d4fbdcdc7b97a631e5832f2",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_serviceFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_usdValueTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"ContractRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newServiceFeeRecipient\",\"type\":\"address\"}],\"name\":\"ServiceFeeRecipientChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"activateFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"addKeeperToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_defaultValue\",\"type\":\"bytes32\"}],\"name\":\"addNewContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"allowableFeeTiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"}],\"name\":\"changeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"changeGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_serviceFeeRecipient\",\"type\":\"address\"}],\"name\":\"changeServiceFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"deactivateFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowableFeeTiers\",\"outputs\":[{\"internalType\":\"uint24[]\",\"name\":\"\",\"type\":\"uint24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeTiers\",\"outputs\":[{\"internalType\":\"uint24[]\",\"name\":\"\",\"type\":\"uint24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getModuleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"defaultData\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRegistry.Entry\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModuleKeys\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_licenseAmount\",\"type\":\"uint32\"}],\"name\":\"getServiceFeeRatioFromLicenseAmount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"ratio\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"feeTier\",\"type\":\"uint24\"}],\"name\":\"isAllowableFeeTier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"licnesesToServiceFeeRatio\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moduleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"defaultData\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManagerFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"removeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"removeKeeperFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeeDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_defaultData\",\"type\":\"bytes32\"}],\"name\":\"setDefaultData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionManagerFactory\",\"type\":\"address\"}],\"name\":\"setPositionManagerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_licenseAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_serviceFeeRatio\",\"type\":\"uint32\"}],\"name\":\"setServiceFeeRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyProviderWalletFactory\",\"type\":\"address\"}],\"name\":\"setStrategyProviderWalletFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdValueAddress\",\"type\":\"address\"}],\"name\":\"setUsdValueTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"}],\"name\":\"setWETH9\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyProviderWalletFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdValueTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedKeepers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractAdded(address,bytes32)\":{\"params\":{\"contractId\":\"keccak of contract name\",\"newContract\":\"address of the new contract\"}},\"ContractChanged(address,address,bytes32)\":{\"params\":{\"contractId\":\"keccak of contract name\",\"newContract\":\"address of the contract after update\",\"oldContract\":\"address of the contract before update\"}},\"ContractRemoved(address,bytes32)\":{\"params\":{\"contractAddress\":\"address of the removed contract\",\"contractId\":\"keccak of removed contract name\"}},\"GovernanceChanged(address)\":{\"params\":{\"newGovernance\":\"the new governance address\"}},\"ServiceFeeRecipientChanged(address)\":{\"params\":{\"newServiceFeeRecipient\":\"the new service fee recipient address\"}}},\"kind\":\"dev\",\"methods\":{\"activateFeeTier(uint24)\":{\"params\":{\"fee\":\"fee tier to be activated\"}},\"addKeeperToWhitelist(address)\":{\"params\":{\"_keeper\":\"address of the new keeper\"}},\"addNewContract(bytes32,address,bytes32)\":{\"params\":{\"_contractAddress\":\"address of the new contract\",\"_defaultValue\":\"default value of the contract\",\"_id\":\"keccak256 of contract name\"}},\"changeContract(bytes32,address)\":{\"params\":{\"_id\":\"keccak256 of contract id string\",\"_newContractAddress\":\"address of the new contract\"}},\"changeGovernance(address)\":{\"params\":{\"_governance\":\"the address of the new governance\"}},\"changeServiceFeeRecipient(address)\":{\"params\":{\"_serviceFeeRecipient\":\"the address of the new service fee recipient\"}},\"deactivateFeeTier(uint24)\":{\"params\":{\"fee\":\"fee tier to be deactivated\"}},\"getAllowableFeeTiers()\":{\"returns\":{\"_0\":\"array of allowable fee tiers\"}},\"getFeeTiers()\":{\"returns\":{\"_0\":\"array of fee tiers\"}},\"getModuleInfo(bytes32)\":{\"params\":{\"_id\":\"keccak256 of module id string\"},\"returns\":{\"_0\":\"entry of the module\"}},\"getModuleKeys()\":{\"returns\":{\"_0\":\"bytes32[] all module keys\"}},\"getServiceFeeRatioFromLicenseAmount(uint32)\":{\"params\":{\"_licenseAmount\":\"license amount to get service fee ratio\"}},\"isAllowableFeeTier(uint24)\":{\"params\":{\"feeTier\":\"the fee tier to check\"},\"returns\":{\"_0\":\"true if the fee tier is allowable, false otherwise\"}},\"removeContract(bytes32)\":{\"params\":{\"_id\":\"keccak256 of contract id string\"}},\"removeKeeperFromWhitelist(address)\":{\"params\":{\"_keeper\":\"address of the keeper to remove\"}},\"setDefaultData(bytes32,bytes32)\":{\"params\":{\"_defaultData\":\"default data for the module\",\"_id\":\"keccak256 of module id string\"}},\"setMaxTwapDeviation(int24)\":{\"params\":{\"_maxTwapDeviation\":\"the new oracle price deviation threshold\"}},\"setPositionManagerFactory(address)\":{\"params\":{\"_positionManagerFactory\":\"the address of the position manager factory\"}},\"setStrategyProviderWalletFactory(address)\":{\"params\":{\"_strategyProviderWalletFactory\":\"the address of the strategy provider collect wallet factory\"}},\"setTwapDuration(uint32)\":{\"params\":{\"_twapDuration\":\"the new twap duration\"}},\"setUsdValueTokenAddress(address)\":{\"params\":{\"_usdValueAddress\":\"the address of new usd value token\"}},\"setWETH9(address)\":{\"params\":{\"_weth9\":\"the address of new weth9\"}}},\"stateVariables\":{\"governance\":{\"return\":\"address of Governance\"},\"maxTwapDeviation\":{\"return\":\"int24 max twap deviation\"},\"positionManagerFactoryAddress\":{\"return\":\"address of PositionManagerFactory\"},\"serviceFeeDenominator\":{\"return\":\"uint32 denominator of service fee ratio\"},\"serviceFeeRecipient\":{\"return\":\"address of recipient of service fee\"},\"strategyProviderWalletFactoryAddress\":{\"return\":\"address of StrategyProviderWalletFactory\"},\"twapDuration\":{\"return\":\"uint32 twap duration\"},\"usdValueTokenAddress\":{\"return\":\"address of USD value token\"},\"weth9\":{\"return\":\"address of weth9\"},\"whitelistedKeepers\":{\"params\":{\"_keeper\":\"address to check\"},\"return\":\"bool true if the address is withelisted, false otherwise\"}},\"title\":\"Stores all the governance variables\",\"version\":1},\"userdoc\":{\"events\":{\"ContractAdded(address,bytes32)\":{\"notice\":\"emitted when a contract is added to registry\"},\"ContractChanged(address,address,bytes32)\":{\"notice\":\"emitted when a contract address is updated\"},\"ContractRemoved(address,bytes32)\":{\"notice\":\"emitted when a contract address is removed\"},\"GovernanceChanged(address)\":{\"notice\":\"emitted when governance address is changed\"},\"ServiceFeeRecipientChanged(address)\":{\"notice\":\"emitted when service fee recipient address is changed\"}},\"kind\":\"user\",\"methods\":{\"activateFeeTier(uint24)\":{\"notice\":\"activates a fee tier\"},\"addKeeperToWhitelist(address)\":{\"notice\":\"adds a new whitelisted keeper\"},\"addNewContract(bytes32,address,bytes32)\":{\"notice\":\"Register a contract\"},\"changeContract(bytes32,address)\":{\"notice\":\"Changes a contract's address\"},\"changeGovernance(address)\":{\"notice\":\"change the address of the governance\"},\"changeServiceFeeRecipient(address)\":{\"notice\":\"change the address of the service fee recipient\"},\"deactivateFeeTier(uint24)\":{\"notice\":\"deactivates a fee tier\"},\"getAllowableFeeTiers()\":{\"notice\":\"get the list of allowable fee tiers\"},\"getFeeTiers()\":{\"notice\":\"get the list of fee tiers\"},\"getModuleInfo(bytes32)\":{\"notice\":\"Get the address of a module for a given key\"},\"getModuleKeys()\":{\"notice\":\"Get the keys for all modules\"},\"getServiceFeeRatioFromLicenseAmount(uint32)\":{\"notice\":\"get service fee ratio for a given license amount\"},\"governance()\":{\"notice\":\"return the address of Governance\"},\"isAllowableFeeTier(uint24)\":{\"notice\":\"check if the fee tier is allowable\"},\"maxTwapDeviation()\":{\"notice\":\"return the max twap deviation\"},\"positionManagerFactoryAddress()\":{\"notice\":\"return the address of PositionManagerFactory\"},\"removeContract(bytes32)\":{\"notice\":\"Removes a contract\"},\"removeKeeperFromWhitelist(address)\":{\"notice\":\"remove a whitelisted keeper\"},\"serviceFeeDenominator()\":{\"notice\":\"return the denominator of service fee ratio\"},\"serviceFeeRecipient()\":{\"notice\":\"return the address of recipient of service fee\"},\"setDefaultData(bytes32,bytes32)\":{\"notice\":\"Set default data for a module\"},\"setMaxTwapDeviation(int24)\":{\"notice\":\"set oracle price deviation threshold\"},\"setPositionManagerFactory(address)\":{\"notice\":\"sets the Position manager factory address\"},\"setStrategyProviderWalletFactory(address)\":{\"notice\":\"sets the strategy provider collect wallet factory address\"},\"setTwapDuration(uint32)\":{\"notice\":\"set twap duration\"},\"setUsdValueTokenAddress(address)\":{\"notice\":\"set address of usd value token\"},\"setWETH9(address)\":{\"notice\":\"set address of weth9\"},\"strategyProviderWalletFactoryAddress()\":{\"notice\":\"return the address of StrategyProviderWalletFactory\"},\"twapDuration()\":{\"notice\":\"return the twap duration\"},\"usdValueTokenAddress()\":{\"notice\":\"return the address of USD value token\"},\"weth9()\":{\"notice\":\"return the address of weth9\"},\"whitelistedKeepers(address)\":{\"notice\":\"checks if the address is whitelisted as a keeper\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./interfaces/IRegistry.sol\\\";\\n\\n/// @title Stores all the governance variables\\ncontract Registry is IRegistry {\\n    address public override governance;\\n    address public override positionManagerFactoryAddress;\\n    address public override strategyProviderWalletFactoryAddress;\\n\\n    // for security of swap\\n    int24 public override maxTwapDeviation;\\n    uint32 public override twapDuration;\\n\\n    // for quote token\\n    address public override usdValueTokenAddress;\\n    address public override weth9;\\n\\n    // for keeper\\n    mapping(address => bool) public override whitelistedKeepers;\\n\\n    // for modules\\n    mapping(bytes32 => Entry) public modules;\\n    bytes32[] public moduleKeys;\\n\\n    // uniswap allowable fee tiers\\n    mapping(uint24 => bool) public allowableFeeTiers;\\n    uint24[] public feeTiers;\\n\\n    // for service fee of strategy provider\\n    uint32 public override serviceFeeDenominator = 100_000_000;\\n    address public override serviceFeeRecipient;\\n    uint32 private serviceFeeRatioLength;\\n    mapping(uint32 => uint32) public licnesesToServiceFeeRatio;\\n\\n    ///@notice emitted when governance address is changed\\n    ///@param newGovernance the new governance address\\n    event GovernanceChanged(address newGovernance);\\n\\n    ///@notice emitted when service fee recipient address is changed\\n    ///@param newServiceFeeRecipient the new service fee recipient address\\n    event ServiceFeeRecipientChanged(address newServiceFeeRecipient);\\n\\n    ///@notice emitted when a contract is added to registry\\n    ///@param newContract address of the new contract\\n    ///@param contractId keccak of contract name\\n    event ContractAdded(address newContract, bytes32 contractId);\\n\\n    ///@notice emitted when a contract address is updated\\n    ///@param oldContract address of the contract before update\\n    ///@param newContract address of the contract after update\\n    ///@param contractId keccak of contract name\\n    event ContractChanged(address oldContract, address newContract, bytes32 contractId);\\n\\n    ///@notice emitted when a contract address is removed\\n    ///@param contractAddress address of the removed contract\\n    ///@param contractId keccak of removed contract name\\n    event ContractRemoved(address contractAddress, bytes32 contractId);\\n\\n    constructor(\\n        address _governance,\\n        address _serviceFeeRecipient,\\n        int24 _maxTwapDeviation,\\n        uint32 _twapDuration,\\n        address _usdValueTokenAddress,\\n        address _weth9\\n    ) {\\n        require(_governance != address(0), \\\"RCG\\\");\\n        require(_serviceFeeRecipient != address(0), \\\"RCSFR\\\");\\n        require(_usdValueTokenAddress != address(0), \\\"RCUTA\\\");\\n        require(_weth9 != address(0), \\\"RCW\\\");\\n\\n        governance = _governance;\\n        serviceFeeRecipient = _serviceFeeRecipient;\\n        maxTwapDeviation = _maxTwapDeviation;\\n        twapDuration = _twapDuration;\\n        usdValueTokenAddress = _usdValueTokenAddress;\\n        weth9 = _weth9;\\n\\n        initAllowableFeeTiers();\\n        initServiceRatioes();\\n    }\\n\\n    function initAllowableFeeTiers() private {\\n        feeTiers.push(100);\\n        allowableFeeTiers[100] = true;\\n        feeTiers.push(500);\\n        allowableFeeTiers[500] = true;\\n        feeTiers.push(3000);\\n        allowableFeeTiers[3000] = true;\\n        feeTiers.push(10000);\\n        allowableFeeTiers[10000] = true;\\n    }\\n\\n    function initServiceRatioes() private {\\n        serviceFeeDenominator = 100_000_000;\\n        serviceFeeRatioLength = 20;\\n\\n        // 15.000000%\\n        licnesesToServiceFeeRatio[1] = 15_000_000;\\n\\n        // 13.781718%\\n        licnesesToServiceFeeRatio[2] = 13_781_718;\\n\\n        // 12.662384%\\n        licnesesToServiceFeeRatio[3] = 12_662_384;\\n\\n        // 11.633960%\\n        licnesesToServiceFeeRatio[4] = 11_633_960;\\n\\n        // 10.689064%\\n        licnesesToServiceFeeRatio[5] = 10_689_064;\\n\\n        // 9.820911%\\n        licnesesToServiceFeeRatio[6] = 9_820_911;\\n\\n        // 9.023269%\\n        licnesesToServiceFeeRatio[7] = 9_023_269;\\n\\n        // 8.290410%\\n        licnesesToServiceFeeRatio[8] = 8_290_410;\\n\\n        // 7.617073%\\n        licnesesToServiceFeeRatio[9] = 7_617_073;\\n\\n        // 6.998423%\\n        licnesesToServiceFeeRatio[10] = 6_998_423;\\n\\n        // 6.430020%\\n        licnesesToServiceFeeRatio[11] = 6_430_020;\\n\\n        // 5.907781%\\n        licnesesToServiceFeeRatio[12] = 5_907_781;\\n\\n        // 5.427958%\\n        licnesesToServiceFeeRatio[13] = 5_427_958;\\n\\n        // 4.987106%\\n        licnesesToServiceFeeRatio[14] = 4_987_106;\\n\\n        // 4.582060%\\n        licnesesToServiceFeeRatio[15] = 4_582_060;\\n\\n        // 4.209910%\\n        licnesesToServiceFeeRatio[16] = 4_209_910;\\n\\n        // 3.867986%\\n        licnesesToServiceFeeRatio[17] = 3_867_986;\\n\\n        // 3.553833%\\n        licnesesToServiceFeeRatio[18] = 3_553_833;\\n\\n        // 3.265195%\\n        licnesesToServiceFeeRatio[19] = 3_265_195;\\n\\n        // 3.000000%\\n        licnesesToServiceFeeRatio[20] = 3_000_000;\\n    }\\n\\n    ///@notice modifier to check if the sender is the governance contract\\n    modifier onlyGovernance() {\\n        require(msg.sender == governance, \\\"ROG\\\");\\n        _;\\n    }\\n\\n    ///@notice change the address of the governance\\n    ///@param _governance the address of the new governance\\n    function changeGovernance(address _governance) external onlyGovernance {\\n        require(_governance != address(0), \\\"RG0\\\");\\n        governance = _governance;\\n        emit GovernanceChanged(_governance);\\n    }\\n\\n    ///@notice change the address of the service fee recipient\\n    ///@param _serviceFeeRecipient the address of the new service fee recipient\\n    function changeServiceFeeRecipient(address _serviceFeeRecipient) external onlyGovernance {\\n        require(_serviceFeeRecipient != address(0), \\\"RS0\\\");\\n        serviceFeeRecipient = _serviceFeeRecipient;\\n        emit ServiceFeeRecipientChanged(_serviceFeeRecipient);\\n    }\\n\\n    ///@notice check if the fee tier is allowable\\n    ///@param feeTier the fee tier to check\\n    ///@return true if the fee tier is allowable, false otherwise\\n    function isAllowableFeeTier(uint24 feeTier) external view override returns (bool) {\\n        return allowableFeeTiers[feeTier];\\n    }\\n\\n    ///@notice get the list of fee tiers\\n    ///@return array of fee tiers\\n    function getFeeTiers() external view override returns (uint24[] memory) {\\n        return feeTiers;\\n    }\\n\\n    ///@notice get the list of allowable fee tiers\\n    ///@return array of allowable fee tiers\\n    function getAllowableFeeTiers() external view override returns (uint24[] memory) {\\n        uint24[] memory allowableFeeTiersList = new uint24[](feeTiers.length);\\n\\n        for (uint256 i; i < feeTiers.length; ++i) {\\n            if (!allowableFeeTiers[feeTiers[i]]) {\\n                continue;\\n            }\\n            allowableFeeTiersList[i] = feeTiers[i];\\n        }\\n\\n        return allowableFeeTiersList;\\n    }\\n\\n    ///@notice sets the Position manager factory address\\n    ///@param _positionManagerFactory the address of the position manager factory\\n    function setPositionManagerFactory(address _positionManagerFactory) external onlyGovernance {\\n        require(_positionManagerFactory != address(0), \\\"RF0\\\");\\n        positionManagerFactoryAddress = _positionManagerFactory;\\n    }\\n\\n    ///@notice sets the strategy provider collect wallet factory address\\n    ///@param _strategyProviderWalletFactory the address of the strategy provider collect wallet factory\\n    function setStrategyProviderWalletFactory(address _strategyProviderWalletFactory) external onlyGovernance {\\n        require(_strategyProviderWalletFactory != address(0), \\\"RF0\\\");\\n        strategyProviderWalletFactoryAddress = _strategyProviderWalletFactory;\\n    }\\n\\n    function setServiceFeeRatio(uint32 _licenseAmount, uint32 _serviceFeeRatio) external onlyGovernance {\\n        licnesesToServiceFeeRatio[_licenseAmount] = _serviceFeeRatio;\\n        if (_licenseAmount > serviceFeeRatioLength) {\\n            serviceFeeRatioLength = _licenseAmount;\\n        }\\n    }\\n\\n    ///@notice Register a contract\\n    ///@param _id keccak256 of contract name\\n    ///@param _contractAddress address of the new contract\\n    ///@param _defaultValue default value of the contract\\n    function addNewContract(bytes32 _id, address _contractAddress, bytes32 _defaultValue) external onlyGovernance {\\n        require(modules[_id].contractAddress == address(0), \\\"RAE\\\");\\n        require(_contractAddress != address(0), \\\"RA0\\\");\\n        modules[_id] = Entry({ contractAddress: _contractAddress, defaultData: _defaultValue });\\n        moduleKeys.push(_id);\\n        emit ContractAdded(_contractAddress, _id);\\n    }\\n\\n    ///@notice Changes a contract's address\\n    ///@param _id keccak256 of contract id string\\n    ///@param _newContractAddress address of the new contract\\n    function changeContract(bytes32 _id, address _newContractAddress) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), \\\"RCE\\\");\\n        require(_newContractAddress != address(0), \\\"RCE0\\\");\\n        address origMoudleAddress = modules[_id].contractAddress;\\n        modules[_id].contractAddress = _newContractAddress;\\n        emit ContractChanged(origMoudleAddress, _newContractAddress, _id);\\n    }\\n\\n    ///@notice Removes a contract\\n    ///@param _id keccak256 of contract id string\\n    function removeContract(bytes32 _id) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), \\\"RRE\\\");\\n        address origMoudleAddress = modules[_id].contractAddress;\\n        delete modules[_id];\\n        emit ContractRemoved(origMoudleAddress, _id);\\n    }\\n\\n    ///@notice adds a new whitelisted keeper\\n    ///@param _keeper address of the new keeper\\n    function addKeeperToWhitelist(address _keeper) external onlyGovernance {\\n        require(!whitelistedKeepers[_keeper], \\\"RKW\\\");\\n        whitelistedKeepers[_keeper] = true;\\n    }\\n\\n    ///@notice remove a whitelisted keeper\\n    ///@param _keeper address of the keeper to remove\\n    function removeKeeperFromWhitelist(address _keeper) external onlyGovernance {\\n        require(whitelistedKeepers[_keeper], \\\"RKN\\\");\\n        whitelistedKeepers[_keeper] = false;\\n    }\\n\\n    ///@notice Get the keys for all modules\\n    ///@return bytes32[] all module keys\\n    function getModuleKeys() external view override returns (bytes32[] memory) {\\n        return moduleKeys;\\n    }\\n\\n    ///@notice Set default data for a module\\n    ///@param _id keccak256 of module id string\\n    ///@param _defaultData default data for the module\\n    function setDefaultData(bytes32 _id, bytes32 _defaultData) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), \\\"RDE\\\");\\n        require(_defaultData != bytes32(0), \\\"RD0\\\");\\n\\n        modules[_id].defaultData = _defaultData;\\n    }\\n\\n    ///@notice set oracle price deviation threshold\\n    ///@param _maxTwapDeviation the new oracle price deviation threshold\\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\\n        maxTwapDeviation = _maxTwapDeviation;\\n    }\\n\\n    ///@notice set twap duration\\n    ///@param _twapDuration the new twap duration\\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\\n        require(_twapDuration != 0, \\\"RT0\\\");\\n        twapDuration = _twapDuration;\\n    }\\n\\n    ///@notice set address of usd value token\\n    ///@param _usdValueAddress the address of new usd value token\\n    function setUsdValueTokenAddress(address _usdValueAddress) external onlyGovernance {\\n        require(_usdValueAddress != address(0), \\\"RUA\\\");\\n        usdValueTokenAddress = _usdValueAddress;\\n    }\\n\\n    ///@notice set address of weth9\\n    ///@param _weth9 the address of new weth9\\n    function setWETH9(address _weth9) external onlyGovernance {\\n        require(_weth9 != address(0), \\\"RWA\\\");\\n        weth9 = _weth9;\\n    }\\n\\n    ///@notice Get the address of a module for a given key\\n    ///@param _id keccak256 of module id string\\n    ///@return entry of the module\\n    function getModuleInfo(bytes32 _id) external view override returns (Entry memory) {\\n        return modules[_id];\\n    }\\n\\n    ///@notice activates a fee tier\\n    ///@param fee fee tier to be activated\\n    function activateFeeTier(uint24 fee) external onlyGovernance {\\n        require(!allowableFeeTiers[fee], \\\"DRAFT\\\");\\n        allowableFeeTiers[fee] = true;\\n        feeTiers.push(fee);\\n    }\\n\\n    ///@notice deactivates a fee tier\\n    ///@param fee fee tier to be deactivated\\n    function deactivateFeeTier(uint24 fee) external onlyGovernance {\\n        require(allowableFeeTiers[fee], \\\"DRAFT\\\");\\n        allowableFeeTiers[fee] = false;\\n        for (uint256 i; i < feeTiers.length; ++i) {\\n            if (feeTiers[i] == fee) {\\n                if (feeTiers.length == 1) {\\n                    feeTiers.pop();\\n                    break;\\n                }\\n                feeTiers[i] = feeTiers[feeTiers.length - 1];\\n                feeTiers.pop();\\n                break;\\n            }\\n        }\\n    }\\n\\n    ///@notice get service fee ratio for a given license amount\\n    ///@param _licenseAmount license amount to get service fee ratio\\n    function getServiceFeeRatioFromLicenseAmount(uint32 _licenseAmount) external view override returns (uint32 ratio) {\\n        require(_licenseAmount != 0, \\\"RLA0\\\");\\n        if (_licenseAmount < serviceFeeRatioLength) {\\n            return licnesesToServiceFeeRatio[_licenseAmount];\\n        } else {\\n            return licnesesToServiceFeeRatio[serviceFeeRatioLength];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x257f1b5349be31f3205fbe0a854ef36e39faeda387dfa6357097a8b7e04a08aa\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface IRegistry {\\n    struct Entry {\\n        address contractAddress;\\n        bytes32 defaultData;\\n    }\\n\\n    ///@notice check if the fee tier is allowable\\n    ///@param feeTier the fee tier to check\\n    ///@return true if the fee tier is allowable, false otherwise\\n    function isAllowableFeeTier(uint24 feeTier) external view returns (bool);\\n\\n    ///@notice get the list of fee tiers\\n    ///@return array of fee tiers\\n    function getFeeTiers() external view returns (uint24[] memory);\\n\\n    ///@notice get the list of allowable fee tiers\\n    ///@return array of allowable fee tiers\\n    function getAllowableFeeTiers() external view returns (uint24[] memory);\\n\\n    ///@notice return the address of PositionManagerFactory\\n    ///@return address of PositionManagerFactory\\n    function positionManagerFactoryAddress() external view returns (address);\\n\\n    ///@notice return the address of StrategyProviderWalletFactory\\n    ///@return address of StrategyProviderWalletFactory\\n    function strategyProviderWalletFactoryAddress() external view returns (address);\\n\\n    ///@notice return the address of weth9\\n    ///@return address of weth9\\n    function weth9() external view returns (address);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function governance() external view returns (address);\\n\\n    ///@notice return the address of recipient of service fee\\n    ///@return address of recipient of service fee\\n    function serviceFeeRecipient() external view returns (address);\\n\\n    ///@notice return the max twap deviation\\n    ///@return int24 max twap deviation\\n    function maxTwapDeviation() external view returns (int24);\\n\\n    ///@notice return the twap duration\\n    ///@return uint32 twap duration\\n    function twapDuration() external view returns (uint32);\\n\\n    ///@notice return the address of USD value token\\n    ///@return address of USD value token\\n    function usdValueTokenAddress() external view returns (address);\\n\\n    ///@notice return the denominator of service fee ratio\\n    ///@return uint32 denominator of service fee ratio\\n    function serviceFeeDenominator() external view returns (uint32);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function getModuleKeys() external view returns (bytes32[] memory);\\n\\n    ///@notice checks if the address is whitelisted as a keeper\\n    ///@param _keeper address to check\\n    ///@return bool true if the address is withelisted, false otherwise\\n    function whitelistedKeepers(address _keeper) external view returns (bool);\\n\\n    ///@notice get the module info by id\\n    ///@param _id id of the module\\n    ///@return Entry module info\\n    function getModuleInfo(bytes32 _id) external view returns (Entry memory);\\n\\n    ///@notice get service fee ratio for a given license amount\\n    ///@param _licenseAmount license amount to get service fee ratio\\n    function getServiceFeeRatioFromLicenseAmount(uint32 _licenseAmount) external view returns (uint32 ratio);\\n}\\n\",\"keccak256\":\"0xf01491fbe7aec6e223f1a90b69cc36b5ecee1386f23e0f052f19ff802195fe20\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x6080604052600a805463ffffffff19166305f5e1001790553480156200002457600080fd5b5060405162002185380380620021858339810160408190526200004791620006f1565b6001600160a01b038616620000795760405162461bcd60e51b81526004016200007090620007bd565b60405180910390fd5b6001600160a01b038516620000a25760405162461bcd60e51b815260040162000070906200079e565b6001600160a01b038216620000cb5760405162461bcd60e51b81526004016200007090620007da565b6001600160a01b038116620000f45760405162461bcd60e51b8152600401620000709062000781565b600080546001600160a01b03199081166001600160a01b0389811691909117909255600a8054600160201b600160c01b031916640100000000898516021790556002805462ffffff60a01b1916600160a01b62ffffff89840b16021763ffffffff60b81b1916600160b81b63ffffffff8816021790556003805482168584161790556004805490911691831691909117905562000190620001a6565b6200019a62000331565b505050505050620007f9565b60098054600180820183557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600a8084048201805462ffffff95839006600390810261010090810a8881021990931660649093029290921790925560086020527fffce496b4ceda4229449aa05397e44a9af6706b3864aaa0c63ac1ad144e65a79805460ff1990811687179091558754808701895584810486018054918690068502840a808a02199092166101f49092029190911790557f0236ac8b33b887d9cc23d3c9dee131431f2d92d6188905e4684dfbab4c7e1d5580548216871790558754808701895584810486018054918690068502840a808a0219909216610bb89092029190911790557fcb263d23b1fb1bf1f390b1f5cb5d90f60639b9978821b6848aace0182fb3212080548216871790558754808701909855838804909401805493909706909102900a9384021916612710938402179093556000919091527f4969da9bd78742b4e290eca63fcea80111bfc0ca2359ae652f31f3dc4e8929bc8054909216179055565b600a8054600560c21b63ffffffff60c01b1963ffffffff199283166305f5e100171617909155600b6020527f72c6bfb7988af3a1efa6568f02a999bc52252641c659d85961ca3d372b57d5cf8054821662e4e1c01790557fa50eece07c7db1631545c0069bd8f5f54d5935e215d59097edf258a44ba916348054821662d24ad61790557f64c15cc42be7899b001f818cf4433057002112c418d1d3a67cd5cb453051d33e8054821662c136701790557f12d0c11577e2f0950f57c455c117796550b79f444811db8ba2f69c57b646c7848054821662b185281790557febae6141bae5521e99e0a8d610356b0f501fea54980b59c84841db43ba7204f48054821662a31a281790557f0387e9d1203691d8e3362a7e4c6723de358a4010d7f31ecbec3fbfc61d1c75fc805482166295daef1790557ff5559028dc9ba50d75343c779b2f75e13a84a14662932fc67a486f263ca31a96805482166289af251790557f71f482bdabd1ea844d62c952b094e632959690d7448ca2aab34034ec9856935880548216627e806a1790557fe12d5ff10640a555479d85b7ab5f83b5dbd3cf6ac615eec77e24e0984b75a0388054821662743a311790557fc47c2f4ab42fe2617dd76ca1eb9781d09fced5e5671df71824e2f8a8f694e02480548216626ac9971790557fe8056e2ed8943b7f61a5f0dc88c79a5a6cec2bb36a7bd11ce130f2961c6320b98054821662621d441790557f765e72d9703c9804ad76c7d0af52f5313041ea56bb31a328e17fea205151b5ea80548216625a25451790557f0a2216aa9bbf8764f3bfb9fafcef7f625aba82383c1a9d14d721124ff3059581805482166252d2f61790557f7ae97ffc8b2fe6ed730ad82f8c44cc0285c7a97ac189e2d88c56200fe9a501ab80548216624c18e21790557faa4a9a284509ef9fb8de5e34389d7f6e999498a23d3df7e6e3cd60371eeb0d08805482166245eaac1790557f8b7b9f9813a325ff1d1742084c33636aa028a7979ae4249304ff23e03619a4a68054821662403cf61790557f4850c7fcd76ef9a9b6af49426db50eab97252f2b3eda6fb3fba71ff8796ec45c80548216623b05521790557ff67afc5d8a9483ebb5641ce5845b29143b497c64e8e700f016cf6767580712858054821662363a291790557fb9afdb88392d364081f976ddee080ff9152db8f126d75c504961a2cbe6e4d6e7805482166231d2ab17905560146000527f4cb01e6f5bc5cfee86272b5048cc519702c0808a5ebc579852135b705a34ba7f8054909116622dc6c0179055565b80516001600160a01b0381168114620006ec57600080fd5b919050565b60008060008060008060c087890312156200070a578182fd5b6200071587620006d4565b95506200072560208801620006d4565b945060408701518060020b81146200073b578283fd5b606088015190945063ffffffff8116811462000755578283fd5b92506200076560808801620006d4565b91506200077560a08801620006d4565b90509295509295509295565b60208082526003908201526252435760e81b604082015260600190565b6020808252600590820152642921a9a32960d91b604082015260600190565b60208082526003908201526252434760e81b604082015260600190565b602080825260059082015264524355544160d81b604082015260600190565b61197c80620008096000396000f3fe608060405234801561001057600080fd5b50600436106102315760003560e01c806375a243c411610130578063c433c80a116100b8578063e7c7cb911161007c578063e7c7cb91146104c7578063e9a4d24f146104dc578063edbe9437146104e4578063ee51553b146104f7578063f80ffbd51461050a57610231565b8063c433c80a1461045b578063ca91e18c1461046e578063d93194f114610481578063da99d9b8146104a1578063de985aa2146104b457610231565b806399572d6f116100ff57806399572d6f146103ee5780639c7f78c914610401578063a43e04d814610414578063aee5a8df14610427578063b0b6cc1a1461043a57610231565b806375a243c4146103935780637c3ab968146103a657806386dd37f3146103b9578063990b3ab7146103ce57610231565b806332fa3561116101be57806350879c1c1161018257806350879c1c14610360578063563e77ef146103685780635aa6e675146103705780635c2d8040146103785780637371f0a41461038057610231565b806332fa3561146102ff57806336d4bd4b146103125780633a8141cc146103255780633cbff3fe1461033a5780634d1205eb1461034d57610231565b8063230ed44a11610205578063230ed44a1461029c57806326d89545146102bc5780632a3755a1146102d15780632d1805c5146102e45780632d2c5b58146102f757610231565b806237620a1461023657806308846aa21461024b578063211b20a314610269578063214fa76014610289575b600080fd5b6102496102443660046115da565b610512565b005b6102536105a0565b6040516102609190611603565b60405180910390f35b61027c6102773660046114e4565b6105af565b6040516102609190611905565b6102496102973660046114c3565b6105ed565b6102af6102aa3660046114e4565b61065f565b6040516102609190611925565b6102c4610698565b6040516102609190611935565b6102496102df366004611527565b6106ab565b6102496102f23660046114c3565b6107e6565b610253610858565b61024961030d3660046114fc565b610867565b6102496103203660046114c3565b61094d565b61032d6109fe565b6040516102609190611654565b61024961034836600461157c565b610a56565b61024961035b3660046114c3565b610aa5565b610253610b2c565b6102c4610b3b565b610253610b47565b610253610b56565b6102c461038e3660046115c0565b610b6d565b6102496103a136600461159d565b610bf3565b6102496103b43660046114c3565b610cc6565b6103c1610d38565b6040516102609190611698565b6103e16103dc36600461159d565b610e45565b60405161026091906116d5565b6102496103fc3660046114c3565b610e5a565b6103e161040f36600461159d565b610ef5565b6102496104223660046114e4565b610f0f565b61024961043536600461155b565b610fdc565b61044d6104483660046114e4565b61106c565b60405161026092919061163b565b6102496104693660046115c0565b611091565b61024961047c3660046114c3565b611104565b61049461048f3660046114e4565b611176565b60405161026091906116e0565b6102c46104af3660046115c0565b611197565b6102496104c23660046114c3565b6111af565b6104cf611232565b60405161026091906116e9565b6103c1611242565b6103e16104f23660046114c3565b6112c3565b61024961050536600461159d565b6112d8565b610253611472565b6000546001600160a01b031633146105455760405162461bcd60e51b815260040161053c90611751565b60405180910390fd5b63ffffffff8281166000818152600b60205260409020805463ffffffff1916848416179055600a54600160c01b9004909116101561059c57600a805463ffffffff60c01b1916600160c01b63ffffffff8516021790555b5050565b6003546001600160a01b031681565b6105b7611481565b50600081815260066020908152604091829020825180840190935280546001600160a01b0316835260010154908201525b919050565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811661063d5760405162461bcd60e51b815260040161053c9061178b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6009818154811061066f57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600254600160b81b900463ffffffff1681565b6000546001600160a01b031633146106d55760405162461bcd60e51b815260040161053c90611751565b6000838152600660205260409020546001600160a01b03161561070a5760405162461bcd60e51b815260040161053c90611891565b6001600160a01b0382166107305760405162461bcd60e51b815260040161053c9061181d565b6040805180820182526001600160a01b038481168252602080830185815260008881526006909252848220935184546001600160a01b0319169316929092178355905160019283015560078054928301815590527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801849055517f1e3ff6d88ea2e368a0e9574292292d3479376c8066598cb91a0e594b7fc0826d906107d9908490869061163b565b60405180910390a1505050565b6000546001600160a01b031633146108105760405162461bcd60e51b815260040161053c90611751565b6001600160a01b0381166108365760405162461bcd60e51b815260040161053c9061183a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546001600160a01b031633146108915760405162461bcd60e51b815260040161053c90611751565b6000828152600660205260409020546001600160a01b03166108c55760405162461bcd60e51b815260040161053c906118ae565b6001600160a01b0381166108eb5760405162461bcd60e51b815260040161053c906117e2565b6000828152600660205260409081902080546001600160a01b038481166001600160a01b031983161790925591519116907fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada8906107d990839085908790611617565b6000546001600160a01b031633146109775760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811661099d5760405162461bcd60e51b815260040161053c906118e8565b600a8054640100000000600160c01b0319166401000000006001600160a01b038416021790556040517f06c91039738fa8dc4357b6ffab234823669e423a0ba29fc67ca92333099e5c50906109f3908390611603565b60405180910390a150565b60606007805480602002602001604051908101604052809291908181526020018280548015610a4c57602002820191906000526020600020905b815481526020019060010190808311610a38575b5050505050905090565b6000546001600160a01b03163314610a805760405162461bcd60e51b815260040161053c90611751565b6002805491810b62ffffff16600160a01b0262ffffff60a01b19909216919091179055565b6000546001600160a01b03163314610acf5760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811660009081526005602052604090205460ff1615610b085760405162461bcd60e51b815260040161053c9061176e565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6004546001600160a01b031681565b600a5463ffffffff1681565b6000546001600160a01b031681565b600a5464010000000090046001600160a01b031681565b600063ffffffff8216610b925760405162461bcd60e51b815260040161053c906116f7565b600a5463ffffffff600160c01b90910481169083161015610bcb575063ffffffff8082166000908152600b6020526040902054166105e8565b50600a5463ffffffff600160c01b90910481166000908152600b6020526040902054166105e8565b6000546001600160a01b03163314610c1d5760405162461bcd60e51b815260040161053c90611751565b62ffffff811660009081526008602052604090205460ff1615610c525760405162461bcd60e51b815260040161053c90611732565b62ffffff9081166000818152600860205260408120805460ff19166001908117909155600980549182018155909152600a8082047f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018054600392909306919091026101000a928302929093021916179055565b6000546001600160a01b03163314610cf05760405162461bcd60e51b815260040161053c90611751565b6001600160a01b038116610d165760405162461bcd60e51b815260040161053c9061178b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60095460609060009067ffffffffffffffff81118015610d5757600080fd5b50604051908082528060200260200182016040528015610d81578160200160208202803683370190505b50905060005b600954811015610e3f576008600060098381548110610da257fe5b60009182526020808320600a8084049091015492066003026101000a90910462ffffff16835282019290925260400190205460ff16610de057610e37565b60098181548110610ded57fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff16828281518110610e1e57fe5b602002602001019062ffffff16908162ffffff16815250505b600101610d87565b50905090565b60086020526000908152604090205460ff1681565b6000546001600160a01b03163314610e845760405162461bcd60e51b815260040161053c90611751565b6001600160a01b038116610eaa5760405162461bcd60e51b815260040161053c90611857565b600080546001600160a01b0319166001600160a01b0383161790556040517fa6a85f15b976d399f39ad43e515e75910bac714bc55eeff6131fb90780d6f746906109f3908390611603565b62ffffff1660009081526008602052604090205460ff1690565b6000546001600160a01b03163314610f395760405162461bcd60e51b815260040161053c90611751565b6000818152600660205260409020546001600160a01b0316610f6d5760405162461bcd60e51b815260040161053c90611874565b60008181526006602052604080822080546001600160a01b031981168255600190910192909255516001600160a01b03909116907fc7e6ceacdd3c01833c83a12e1cd1c28559370239a10b0c10e3431746dfa2055f90610fd0908390859061163b565b60405180910390a15050565b6000546001600160a01b031633146110065760405162461bcd60e51b815260040161053c90611751565b6000828152600660205260409020546001600160a01b031661103a5760405162461bcd60e51b815260040161053c906117c5565b806110575760405162461bcd60e51b815260040161053c90611715565b60009182526006602052604090912060010155565b600660205260009081526040902080546001909101546001600160a01b039091169082565b6000546001600160a01b031633146110bb5760405162461bcd60e51b815260040161053c90611751565b63ffffffff81166110de5760405162461bcd60e51b815260040161053c90611800565b6002805463ffffffff909216600160b81b0263ffffffff60b81b19909216919091179055565b6000546001600160a01b0316331461112e5760405162461bcd60e51b815260040161053c90611751565b6001600160a01b0381166111545760405162461bcd60e51b815260040161053c906118cb565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061118657600080fd5b600091825260209091200154905081565b600b6020526000908152604090205463ffffffff1681565b6000546001600160a01b031633146111d95760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811660009081526005602052604090205460ff166112115760405162461bcd60e51b815260040161053c906117a8565b6001600160a01b03166000908152600560205260409020805460ff19169055565b60028054600160a01b9004900b81565b60606009805480602002602001604051908101604052809291908181526020018280548015610a4c57602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff168152602001906003019060208260020104928301926001038202915080841161127f5790505050505050905090565b60056020526000908152604090205460ff1681565b6000546001600160a01b031633146113025760405162461bcd60e51b815260040161053c90611751565b62ffffff811660009081526008602052604090205460ff166113365760405162461bcd60e51b815260040161053c90611732565b62ffffff81166000908152600860205260408120805460ff191690555b60095481101561059c578162ffffff166009828154811061137057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff16141561146a57600954600114156113ea5760098054806113b657fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff0219169055905561059c565b6009805460001981019081106113fc57fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff166009828154811061142e57fe5b90600052602060002090600a91828204019190066003026101000a81548162ffffff021916908362ffffff16021790555060098054806113b657fe5b600101611353565b6002546001600160a01b031681565b604080518082019091526000808252602082015290565b80356001600160a01b03811681146105e857600080fd5b803563ffffffff811681146105e857600080fd5b6000602082840312156114d4578081fd5b6114dd82611498565b9392505050565b6000602082840312156114f5578081fd5b5035919050565b6000806040838503121561150e578081fd5b8235915061151e60208401611498565b90509250929050565b60008060006060848603121561153b578081fd5b8335925061154b60208501611498565b9150604084013590509250925092565b6000806040838503121561156d578182fd5b50508035926020909101359150565b60006020828403121561158d578081fd5b81358060020b81146114dd578182fd5b6000602082840312156115ae578081fd5b813562ffffff811681146114dd578182fd5b6000602082840312156115d1578081fd5b6114dd826114af565b600080604083850312156115ec578182fd5b6115f5836114af565b915061151e602084016114af565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101561168c57835183529284019291840191600101611670565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561168c57835162ffffff16835292840192918401916001016116b4565b901515815260200190565b90815260200190565b60029190910b815260200190565b6020808252600490820152630524c41360e41b604082015260600190565b60208082526003908201526205244360ec1b604082015260600190565b602080825260059082015264111490519560da1b604082015260600190565b602080825260039082015262524f4760e81b604082015260600190565b602080825260039082015262524b5760e81b604082015260600190565b60208082526003908201526205246360ec1b604082015260600190565b6020808252600390820152622925a760e91b604082015260600190565b60208082526003908201526252444560e81b604082015260600190565b6020808252600490820152630524345360e41b604082015260600190565b60208082526003908201526205254360ec1b604082015260600190565b60208082526003908201526205241360ec1b604082015260600190565b60208082526003908201526252554160e81b604082015260600190565b60208082526003908201526205247360ec1b604082015260600190565b60208082526003908201526252524560e81b604082015260600190565b60208082526003908201526252414560e81b604082015260600190565b60208082526003908201526252434560e81b604082015260600190565b60208082526003908201526252574160e81b604082015260600190565b60208082526003908201526205253360ec1b604082015260600190565b81516001600160a01b031681526020918201519181019190915260400190565b62ffffff91909116815260200190565b63ffffffff9190911681526020019056fea2646970667358221220c6875d9b2981b047e265225669c239bda5b460a5cdbfe07ff7c0e9a23cd4c84e64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102315760003560e01c806375a243c411610130578063c433c80a116100b8578063e7c7cb911161007c578063e7c7cb91146104c7578063e9a4d24f146104dc578063edbe9437146104e4578063ee51553b146104f7578063f80ffbd51461050a57610231565b8063c433c80a1461045b578063ca91e18c1461046e578063d93194f114610481578063da99d9b8146104a1578063de985aa2146104b457610231565b806399572d6f116100ff57806399572d6f146103ee5780639c7f78c914610401578063a43e04d814610414578063aee5a8df14610427578063b0b6cc1a1461043a57610231565b806375a243c4146103935780637c3ab968146103a657806386dd37f3146103b9578063990b3ab7146103ce57610231565b806332fa3561116101be57806350879c1c1161018257806350879c1c14610360578063563e77ef146103685780635aa6e675146103705780635c2d8040146103785780637371f0a41461038057610231565b806332fa3561146102ff57806336d4bd4b146103125780633a8141cc146103255780633cbff3fe1461033a5780634d1205eb1461034d57610231565b8063230ed44a11610205578063230ed44a1461029c57806326d89545146102bc5780632a3755a1146102d15780632d1805c5146102e45780632d2c5b58146102f757610231565b806237620a1461023657806308846aa21461024b578063211b20a314610269578063214fa76014610289575b600080fd5b6102496102443660046115da565b610512565b005b6102536105a0565b6040516102609190611603565b60405180910390f35b61027c6102773660046114e4565b6105af565b6040516102609190611905565b6102496102973660046114c3565b6105ed565b6102af6102aa3660046114e4565b61065f565b6040516102609190611925565b6102c4610698565b6040516102609190611935565b6102496102df366004611527565b6106ab565b6102496102f23660046114c3565b6107e6565b610253610858565b61024961030d3660046114fc565b610867565b6102496103203660046114c3565b61094d565b61032d6109fe565b6040516102609190611654565b61024961034836600461157c565b610a56565b61024961035b3660046114c3565b610aa5565b610253610b2c565b6102c4610b3b565b610253610b47565b610253610b56565b6102c461038e3660046115c0565b610b6d565b6102496103a136600461159d565b610bf3565b6102496103b43660046114c3565b610cc6565b6103c1610d38565b6040516102609190611698565b6103e16103dc36600461159d565b610e45565b60405161026091906116d5565b6102496103fc3660046114c3565b610e5a565b6103e161040f36600461159d565b610ef5565b6102496104223660046114e4565b610f0f565b61024961043536600461155b565b610fdc565b61044d6104483660046114e4565b61106c565b60405161026092919061163b565b6102496104693660046115c0565b611091565b61024961047c3660046114c3565b611104565b61049461048f3660046114e4565b611176565b60405161026091906116e0565b6102c46104af3660046115c0565b611197565b6102496104c23660046114c3565b6111af565b6104cf611232565b60405161026091906116e9565b6103c1611242565b6103e16104f23660046114c3565b6112c3565b61024961050536600461159d565b6112d8565b610253611472565b6000546001600160a01b031633146105455760405162461bcd60e51b815260040161053c90611751565b60405180910390fd5b63ffffffff8281166000818152600b60205260409020805463ffffffff1916848416179055600a54600160c01b9004909116101561059c57600a805463ffffffff60c01b1916600160c01b63ffffffff8516021790555b5050565b6003546001600160a01b031681565b6105b7611481565b50600081815260066020908152604091829020825180840190935280546001600160a01b0316835260010154908201525b919050565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811661063d5760405162461bcd60e51b815260040161053c9061178b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6009818154811061066f57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600254600160b81b900463ffffffff1681565b6000546001600160a01b031633146106d55760405162461bcd60e51b815260040161053c90611751565b6000838152600660205260409020546001600160a01b03161561070a5760405162461bcd60e51b815260040161053c90611891565b6001600160a01b0382166107305760405162461bcd60e51b815260040161053c9061181d565b6040805180820182526001600160a01b038481168252602080830185815260008881526006909252848220935184546001600160a01b0319169316929092178355905160019283015560078054928301815590527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801849055517f1e3ff6d88ea2e368a0e9574292292d3479376c8066598cb91a0e594b7fc0826d906107d9908490869061163b565b60405180910390a1505050565b6000546001600160a01b031633146108105760405162461bcd60e51b815260040161053c90611751565b6001600160a01b0381166108365760405162461bcd60e51b815260040161053c9061183a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546001600160a01b031633146108915760405162461bcd60e51b815260040161053c90611751565b6000828152600660205260409020546001600160a01b03166108c55760405162461bcd60e51b815260040161053c906118ae565b6001600160a01b0381166108eb5760405162461bcd60e51b815260040161053c906117e2565b6000828152600660205260409081902080546001600160a01b038481166001600160a01b031983161790925591519116907fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada8906107d990839085908790611617565b6000546001600160a01b031633146109775760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811661099d5760405162461bcd60e51b815260040161053c906118e8565b600a8054640100000000600160c01b0319166401000000006001600160a01b038416021790556040517f06c91039738fa8dc4357b6ffab234823669e423a0ba29fc67ca92333099e5c50906109f3908390611603565b60405180910390a150565b60606007805480602002602001604051908101604052809291908181526020018280548015610a4c57602002820191906000526020600020905b815481526020019060010190808311610a38575b5050505050905090565b6000546001600160a01b03163314610a805760405162461bcd60e51b815260040161053c90611751565b6002805491810b62ffffff16600160a01b0262ffffff60a01b19909216919091179055565b6000546001600160a01b03163314610acf5760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811660009081526005602052604090205460ff1615610b085760405162461bcd60e51b815260040161053c9061176e565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6004546001600160a01b031681565b600a5463ffffffff1681565b6000546001600160a01b031681565b600a5464010000000090046001600160a01b031681565b600063ffffffff8216610b925760405162461bcd60e51b815260040161053c906116f7565b600a5463ffffffff600160c01b90910481169083161015610bcb575063ffffffff8082166000908152600b6020526040902054166105e8565b50600a5463ffffffff600160c01b90910481166000908152600b6020526040902054166105e8565b6000546001600160a01b03163314610c1d5760405162461bcd60e51b815260040161053c90611751565b62ffffff811660009081526008602052604090205460ff1615610c525760405162461bcd60e51b815260040161053c90611732565b62ffffff9081166000818152600860205260408120805460ff19166001908117909155600980549182018155909152600a8082047f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018054600392909306919091026101000a928302929093021916179055565b6000546001600160a01b03163314610cf05760405162461bcd60e51b815260040161053c90611751565b6001600160a01b038116610d165760405162461bcd60e51b815260040161053c9061178b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60095460609060009067ffffffffffffffff81118015610d5757600080fd5b50604051908082528060200260200182016040528015610d81578160200160208202803683370190505b50905060005b600954811015610e3f576008600060098381548110610da257fe5b60009182526020808320600a8084049091015492066003026101000a90910462ffffff16835282019290925260400190205460ff16610de057610e37565b60098181548110610ded57fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff16828281518110610e1e57fe5b602002602001019062ffffff16908162ffffff16815250505b600101610d87565b50905090565b60086020526000908152604090205460ff1681565b6000546001600160a01b03163314610e845760405162461bcd60e51b815260040161053c90611751565b6001600160a01b038116610eaa5760405162461bcd60e51b815260040161053c90611857565b600080546001600160a01b0319166001600160a01b0383161790556040517fa6a85f15b976d399f39ad43e515e75910bac714bc55eeff6131fb90780d6f746906109f3908390611603565b62ffffff1660009081526008602052604090205460ff1690565b6000546001600160a01b03163314610f395760405162461bcd60e51b815260040161053c90611751565b6000818152600660205260409020546001600160a01b0316610f6d5760405162461bcd60e51b815260040161053c90611874565b60008181526006602052604080822080546001600160a01b031981168255600190910192909255516001600160a01b03909116907fc7e6ceacdd3c01833c83a12e1cd1c28559370239a10b0c10e3431746dfa2055f90610fd0908390859061163b565b60405180910390a15050565b6000546001600160a01b031633146110065760405162461bcd60e51b815260040161053c90611751565b6000828152600660205260409020546001600160a01b031661103a5760405162461bcd60e51b815260040161053c906117c5565b806110575760405162461bcd60e51b815260040161053c90611715565b60009182526006602052604090912060010155565b600660205260009081526040902080546001909101546001600160a01b039091169082565b6000546001600160a01b031633146110bb5760405162461bcd60e51b815260040161053c90611751565b63ffffffff81166110de5760405162461bcd60e51b815260040161053c90611800565b6002805463ffffffff909216600160b81b0263ffffffff60b81b19909216919091179055565b6000546001600160a01b0316331461112e5760405162461bcd60e51b815260040161053c90611751565b6001600160a01b0381166111545760405162461bcd60e51b815260040161053c906118cb565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061118657600080fd5b600091825260209091200154905081565b600b6020526000908152604090205463ffffffff1681565b6000546001600160a01b031633146111d95760405162461bcd60e51b815260040161053c90611751565b6001600160a01b03811660009081526005602052604090205460ff166112115760405162461bcd60e51b815260040161053c906117a8565b6001600160a01b03166000908152600560205260409020805460ff19169055565b60028054600160a01b9004900b81565b60606009805480602002602001604051908101604052809291908181526020018280548015610a4c57602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff168152602001906003019060208260020104928301926001038202915080841161127f5790505050505050905090565b60056020526000908152604090205460ff1681565b6000546001600160a01b031633146113025760405162461bcd60e51b815260040161053c90611751565b62ffffff811660009081526008602052604090205460ff166113365760405162461bcd60e51b815260040161053c90611732565b62ffffff81166000908152600860205260408120805460ff191690555b60095481101561059c578162ffffff166009828154811061137057fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff16141561146a57600954600114156113ea5760098054806113b657fe5b60019003818190600052602060002090600a91828204019190066003026101000a81549062ffffff0219169055905561059c565b6009805460001981019081106113fc57fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff166009828154811061142e57fe5b90600052602060002090600a91828204019190066003026101000a81548162ffffff021916908362ffffff16021790555060098054806113b657fe5b600101611353565b6002546001600160a01b031681565b604080518082019091526000808252602082015290565b80356001600160a01b03811681146105e857600080fd5b803563ffffffff811681146105e857600080fd5b6000602082840312156114d4578081fd5b6114dd82611498565b9392505050565b6000602082840312156114f5578081fd5b5035919050565b6000806040838503121561150e578081fd5b8235915061151e60208401611498565b90509250929050565b60008060006060848603121561153b578081fd5b8335925061154b60208501611498565b9150604084013590509250925092565b6000806040838503121561156d578182fd5b50508035926020909101359150565b60006020828403121561158d578081fd5b81358060020b81146114dd578182fd5b6000602082840312156115ae578081fd5b813562ffffff811681146114dd578182fd5b6000602082840312156115d1578081fd5b6114dd826114af565b600080604083850312156115ec578182fd5b6115f5836114af565b915061151e602084016114af565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101561168c57835183529284019291840191600101611670565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561168c57835162ffffff16835292840192918401916001016116b4565b901515815260200190565b90815260200190565b60029190910b815260200190565b6020808252600490820152630524c41360e41b604082015260600190565b60208082526003908201526205244360ec1b604082015260600190565b602080825260059082015264111490519560da1b604082015260600190565b602080825260039082015262524f4760e81b604082015260600190565b602080825260039082015262524b5760e81b604082015260600190565b60208082526003908201526205246360ec1b604082015260600190565b6020808252600390820152622925a760e91b604082015260600190565b60208082526003908201526252444560e81b604082015260600190565b6020808252600490820152630524345360e41b604082015260600190565b60208082526003908201526205254360ec1b604082015260600190565b60208082526003908201526205241360ec1b604082015260600190565b60208082526003908201526252554160e81b604082015260600190565b60208082526003908201526205247360ec1b604082015260600190565b60208082526003908201526252524560e81b604082015260600190565b60208082526003908201526252414560e81b604082015260600190565b60208082526003908201526252434560e81b604082015260600190565b60208082526003908201526252574160e81b604082015260600190565b60208082526003908201526205253360ec1b604082015260600190565b81516001600160a01b031681526020918201519181019190915260400190565b62ffffff91909116815260200190565b63ffffffff9190911681526020019056fea2646970667358221220c6875d9b2981b047e265225669c239bda5b460a5cdbfe07ff7c0e9a23cd4c84e64736f6c63430007060033",
  "devdoc": {
    "events": {
      "ContractAdded(address,bytes32)": {
        "params": {
          "contractId": "keccak of contract name",
          "newContract": "address of the new contract"
        }
      },
      "ContractChanged(address,address,bytes32)": {
        "params": {
          "contractId": "keccak of contract name",
          "newContract": "address of the contract after update",
          "oldContract": "address of the contract before update"
        }
      },
      "ContractRemoved(address,bytes32)": {
        "params": {
          "contractAddress": "address of the removed contract",
          "contractId": "keccak of removed contract name"
        }
      },
      "GovernanceChanged(address)": {
        "params": {
          "newGovernance": "the new governance address"
        }
      },
      "ServiceFeeRecipientChanged(address)": {
        "params": {
          "newServiceFeeRecipient": "the new service fee recipient address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "activateFeeTier(uint24)": {
        "params": {
          "fee": "fee tier to be activated"
        }
      },
      "addKeeperToWhitelist(address)": {
        "params": {
          "_keeper": "address of the new keeper"
        }
      },
      "addNewContract(bytes32,address,bytes32)": {
        "params": {
          "_contractAddress": "address of the new contract",
          "_defaultValue": "default value of the contract",
          "_id": "keccak256 of contract name"
        }
      },
      "changeContract(bytes32,address)": {
        "params": {
          "_id": "keccak256 of contract id string",
          "_newContractAddress": "address of the new contract"
        }
      },
      "changeGovernance(address)": {
        "params": {
          "_governance": "the address of the new governance"
        }
      },
      "changeServiceFeeRecipient(address)": {
        "params": {
          "_serviceFeeRecipient": "the address of the new service fee recipient"
        }
      },
      "deactivateFeeTier(uint24)": {
        "params": {
          "fee": "fee tier to be deactivated"
        }
      },
      "getAllowableFeeTiers()": {
        "returns": {
          "_0": "array of allowable fee tiers"
        }
      },
      "getFeeTiers()": {
        "returns": {
          "_0": "array of fee tiers"
        }
      },
      "getModuleInfo(bytes32)": {
        "params": {
          "_id": "keccak256 of module id string"
        },
        "returns": {
          "_0": "entry of the module"
        }
      },
      "getModuleKeys()": {
        "returns": {
          "_0": "bytes32[] all module keys"
        }
      },
      "getServiceFeeRatioFromLicenseAmount(uint32)": {
        "params": {
          "_licenseAmount": "license amount to get service fee ratio"
        }
      },
      "isAllowableFeeTier(uint24)": {
        "params": {
          "feeTier": "the fee tier to check"
        },
        "returns": {
          "_0": "true if the fee tier is allowable, false otherwise"
        }
      },
      "removeContract(bytes32)": {
        "params": {
          "_id": "keccak256 of contract id string"
        }
      },
      "removeKeeperFromWhitelist(address)": {
        "params": {
          "_keeper": "address of the keeper to remove"
        }
      },
      "setDefaultData(bytes32,bytes32)": {
        "params": {
          "_defaultData": "default data for the module",
          "_id": "keccak256 of module id string"
        }
      },
      "setMaxTwapDeviation(int24)": {
        "params": {
          "_maxTwapDeviation": "the new oracle price deviation threshold"
        }
      },
      "setPositionManagerFactory(address)": {
        "params": {
          "_positionManagerFactory": "the address of the position manager factory"
        }
      },
      "setStrategyProviderWalletFactory(address)": {
        "params": {
          "_strategyProviderWalletFactory": "the address of the strategy provider collect wallet factory"
        }
      },
      "setTwapDuration(uint32)": {
        "params": {
          "_twapDuration": "the new twap duration"
        }
      },
      "setUsdValueTokenAddress(address)": {
        "params": {
          "_usdValueAddress": "the address of new usd value token"
        }
      },
      "setWETH9(address)": {
        "params": {
          "_weth9": "the address of new weth9"
        }
      }
    },
    "stateVariables": {
      "governance": {
        "return": "address of Governance"
      },
      "maxTwapDeviation": {
        "return": "int24 max twap deviation"
      },
      "positionManagerFactoryAddress": {
        "return": "address of PositionManagerFactory"
      },
      "serviceFeeDenominator": {
        "return": "uint32 denominator of service fee ratio"
      },
      "serviceFeeRecipient": {
        "return": "address of recipient of service fee"
      },
      "strategyProviderWalletFactoryAddress": {
        "return": "address of StrategyProviderWalletFactory"
      },
      "twapDuration": {
        "return": "uint32 twap duration"
      },
      "usdValueTokenAddress": {
        "return": "address of USD value token"
      },
      "weth9": {
        "return": "address of weth9"
      },
      "whitelistedKeepers": {
        "params": {
          "_keeper": "address to check"
        },
        "return": "bool true if the address is withelisted, false otherwise"
      }
    },
    "title": "Stores all the governance variables",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractAdded(address,bytes32)": {
        "notice": "emitted when a contract is added to registry"
      },
      "ContractChanged(address,address,bytes32)": {
        "notice": "emitted when a contract address is updated"
      },
      "ContractRemoved(address,bytes32)": {
        "notice": "emitted when a contract address is removed"
      },
      "GovernanceChanged(address)": {
        "notice": "emitted when governance address is changed"
      },
      "ServiceFeeRecipientChanged(address)": {
        "notice": "emitted when service fee recipient address is changed"
      }
    },
    "kind": "user",
    "methods": {
      "activateFeeTier(uint24)": {
        "notice": "activates a fee tier"
      },
      "addKeeperToWhitelist(address)": {
        "notice": "adds a new whitelisted keeper"
      },
      "addNewContract(bytes32,address,bytes32)": {
        "notice": "Register a contract"
      },
      "changeContract(bytes32,address)": {
        "notice": "Changes a contract's address"
      },
      "changeGovernance(address)": {
        "notice": "change the address of the governance"
      },
      "changeServiceFeeRecipient(address)": {
        "notice": "change the address of the service fee recipient"
      },
      "deactivateFeeTier(uint24)": {
        "notice": "deactivates a fee tier"
      },
      "getAllowableFeeTiers()": {
        "notice": "get the list of allowable fee tiers"
      },
      "getFeeTiers()": {
        "notice": "get the list of fee tiers"
      },
      "getModuleInfo(bytes32)": {
        "notice": "Get the address of a module for a given key"
      },
      "getModuleKeys()": {
        "notice": "Get the keys for all modules"
      },
      "getServiceFeeRatioFromLicenseAmount(uint32)": {
        "notice": "get service fee ratio for a given license amount"
      },
      "governance()": {
        "notice": "return the address of Governance"
      },
      "isAllowableFeeTier(uint24)": {
        "notice": "check if the fee tier is allowable"
      },
      "maxTwapDeviation()": {
        "notice": "return the max twap deviation"
      },
      "positionManagerFactoryAddress()": {
        "notice": "return the address of PositionManagerFactory"
      },
      "removeContract(bytes32)": {
        "notice": "Removes a contract"
      },
      "removeKeeperFromWhitelist(address)": {
        "notice": "remove a whitelisted keeper"
      },
      "serviceFeeDenominator()": {
        "notice": "return the denominator of service fee ratio"
      },
      "serviceFeeRecipient()": {
        "notice": "return the address of recipient of service fee"
      },
      "setDefaultData(bytes32,bytes32)": {
        "notice": "Set default data for a module"
      },
      "setMaxTwapDeviation(int24)": {
        "notice": "set oracle price deviation threshold"
      },
      "setPositionManagerFactory(address)": {
        "notice": "sets the Position manager factory address"
      },
      "setStrategyProviderWalletFactory(address)": {
        "notice": "sets the strategy provider collect wallet factory address"
      },
      "setTwapDuration(uint32)": {
        "notice": "set twap duration"
      },
      "setUsdValueTokenAddress(address)": {
        "notice": "set address of usd value token"
      },
      "setWETH9(address)": {
        "notice": "set address of weth9"
      },
      "strategyProviderWalletFactoryAddress()": {
        "notice": "return the address of StrategyProviderWalletFactory"
      },
      "twapDuration()": {
        "notice": "return the twap duration"
      },
      "usdValueTokenAddress()": {
        "notice": "return the address of USD value token"
      },
      "weth9()": {
        "notice": "return the address of weth9"
      },
      "whitelistedKeepers(address)": {
        "notice": "checks if the address is whitelisted as a keeper"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6542,
        "contract": "contracts/Registry.sol:Registry",
        "label": "governance",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6545,
        "contract": "contracts/Registry.sol:Registry",
        "label": "positionManagerFactoryAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6548,
        "contract": "contracts/Registry.sol:Registry",
        "label": "strategyProviderWalletFactoryAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6551,
        "contract": "contracts/Registry.sol:Registry",
        "label": "maxTwapDeviation",
        "offset": 20,
        "slot": "2",
        "type": "t_int24"
      },
      {
        "astId": 6554,
        "contract": "contracts/Registry.sol:Registry",
        "label": "twapDuration",
        "offset": 23,
        "slot": "2",
        "type": "t_uint32"
      },
      {
        "astId": 6557,
        "contract": "contracts/Registry.sol:Registry",
        "label": "usdValueTokenAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6560,
        "contract": "contracts/Registry.sol:Registry",
        "label": "weth9",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 6565,
        "contract": "contracts/Registry.sol:Registry",
        "label": "whitelistedKeepers",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6569,
        "contract": "contracts/Registry.sol:Registry",
        "label": "modules",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_struct(Entry)13907_storage)"
      },
      {
        "astId": 6572,
        "contract": "contracts/Registry.sol:Registry",
        "label": "moduleKeys",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 6576,
        "contract": "contracts/Registry.sol:Registry",
        "label": "allowableFeeTiers",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint24,t_bool)"
      },
      {
        "astId": 6579,
        "contract": "contracts/Registry.sol:Registry",
        "label": "feeTiers",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint24)dyn_storage"
      },
      {
        "astId": 6583,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeDenominator",
        "offset": 0,
        "slot": "10",
        "type": "t_uint32"
      },
      {
        "astId": 6586,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeRecipient",
        "offset": 4,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 6588,
        "contract": "contracts/Registry.sol:Registry",
        "label": "serviceFeeRatioLength",
        "offset": 24,
        "slot": "10",
        "type": "t_uint32"
      },
      {
        "astId": 6592,
        "contract": "contracts/Registry.sol:Registry",
        "label": "licnesesToServiceFeeRatio",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint32,t_uint32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint24)dyn_storage": {
        "base": "t_uint24",
        "encoding": "dynamic_array",
        "label": "uint24[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int24": {
        "encoding": "inplace",
        "label": "int24",
        "numberOfBytes": "3"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(Entry)13907_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IRegistry.Entry)",
        "numberOfBytes": "32",
        "value": "t_struct(Entry)13907_storage"
      },
      "t_mapping(t_uint24,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint24",
        "label": "mapping(uint24 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint32,t_uint32)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_struct(Entry)13907_storage": {
        "encoding": "inplace",
        "label": "struct IRegistry.Entry",
        "members": [
          {
            "astId": 13904,
            "contract": "contracts/Registry.sol:Registry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 13906,
            "contract": "contracts/Registry.sol:Registry",
            "label": "defaultData",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}